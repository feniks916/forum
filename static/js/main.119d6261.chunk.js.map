{"version":3,"sources":["Components/AllArticles/all.module.scss","API/API.js","Redux/userReducer.js","Redux/Article.js","Redux/redux.js","helpers/token.js","Components/RegistrationPage/RegistrationPageContainer.jsx","Components/LoginPage/loginPageContainer.jsx","helpers/timeCreator.jsx","helpers/pagination.js","Components/AllArticles/AllArticles.jsx","helpers/protectedRoute.jsx","Components/CurrentArticle/CurrentArticle.jsx","helpers/tagsCreator.jsx","Components/AddEditArticle/AddArticle.jsx","App.jsx","serviceWorker.js","index.jsx","Components/RegistrationPage/registration.module.scss","Components/AddEditArticle/add.module.scss","Components/LoginPage/login.module.scss","Components/CurrentArticle/current.module.scss"],"names":["module","exports","instance","axios","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","initialState","username","value","status","error","loggedIn","setUserDataAC","name","type","payload","setErrorAC","setLoggedin","mainReducer","state","action","articles","isLoaded","isReceived","pageNumber","pageSize","articlesQuantity","currentArticle","slug","isCreated","setCreatedAC","setDeletedSlug","setRecievedAC","getCurrentArticleAC","article","likeArticle","dispatch","a","post","response","data","errors","unfavoriteArticle","delete","articleReducer","map","el","favorited","favoritesCount","filter","reducers","combineReducers","userData","userReducer","articlesData","store","createStore","applyMiddleware","thunkMiddleware","getJwt","getName","isAuth","getSlug","RegistrationPageContainer","connect","RegistrationThunk","registerData","user","email","password","setItem","props","history","useHistory","push","className","cls","wrapper","initialValues","confirm_password","onSubmit","values","setSubmitting","Promise","resolve","setTimeout","validationSchema","Yup","shape","oneOf","touched","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","form","htmlFor","style","display","id","placeholder","onChange","onBlur","input","undefined","message","String","showIcon","buttonsArea","to","onClick","disabled","LoginPageContainer","thunk","loginData","timeCreator","createdAt","date","Date","now","differenceInMinutes","getTime","parseISO","differenceInHours","differenceInDays","onChangePageNumber","AllArticlesContainer","favoriteArticles","setArticlesAC","setPageNumberAC","setLoadingAC","getArticle","get","result","getSlugAC","deleteArticle","setFavoriteAC","setUnfavoriteAC","setStatusAC","useState","pagesQuantity","seTpagesQuantity","page","seTpage","useEffect","articlesCount","Math","ceil","console","log","fetchData","close","openNotification","key","btn","size","notification","open","description","onClose","registered","removeItem","pagination","defaultCurrent","current","showSizeChanger","total","ul","index","card","src","alt","Card_leftside","authorInfo","dateValue","author","reversedDate","title","tagList","length","join","cardFooter","change","e","stopPropagation","SettingFilled","CloseCircleOutlined","HeartFilled","HeartOutlined","ProtectedRoute","Component","component","rest","render","pathname","from","location","ArticleContainer","setFavoriteCurrentAC","setUnfavoriteCurrentAC","body","updatedAt","sessionSlug","redirect","hasOwnProperty","article_body","EditableTagGroup","tags","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","tag","updateTagList","setState","showInput","focus","handleInputChange","target","handleInputConfirm","indexOf","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","this","ref","onPressEnter","isLongTag","tagElem","color","closable","onDoubleClick","preventDefault","slice","PlusOutlined","React","EditArticleContainer","createArticleThunk","articleData","redirectToArticles","extra","newValues","updatedData","put","required","setFieldValue","TextArea","App","path","exact","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.119d6261.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"all_wrapper__17p4N\",\"registered\":\"all_registered__OQSf-\",\"ul\":\"all_ul__2-Qw3\",\"cardFooter\":\"all_cardFooter__1v0X5\",\"change\":\"all_change__3YX_e\",\"delete\":\"all_delete__FopHT\",\"authorInfo\":\"all_authorInfo__3krot\",\"dateValue\":\"all_dateValue__2TMCD\",\"reversedDate\":\"all_reversedDate__3L6Hm\",\"card\":\"all_card__7TnR3\",\"Card_leftside\":\"all_Card_leftside__2HNns\",\"textBody\":\"all_textBody__2lHwZ\",\"pagination\":\"all_pagination__1aCmd\",\"form\":\"all_form__19lG8\",\"input\":\"all_input__7KoEz\",\"buttonsArea\":\"all_buttonsArea__g_G58\",\"errors\":\"all_errors__Bh9Ng\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://conduit.productionready.io',\r\n});\r\n\r\ninstance.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('cool-jwt');\r\n  if (token) {\r\n    config.headers.Authorization = `Token ${token}`;\r\n  }\r\n  return config\r\n  })\r\n\r\nexport default instance;\r\n\r\nexport const register = registerData =>\r\ninstance.post('/api/users', registerData)\r\n\r\nexport const updateArticle = updatedData =>\r\ninstance.put(`/api/articles/${localStorage.getItem('slug')}`, updatedData)\r\n\r\nexport const login = (loginData) => \r\n  instance.post('/api/users/login', loginData)\r\n\r\nexport const createArticle = (articleData) => \r\n  instance.post('/api/articles' ,articleData)\r\n","import { login, register } from '../API/API'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst SET_LOGGED_IN = 'SET_LOGGED_IN';\r\n\r\nlet initialState = {\r\n    username: '',\r\n    token: '',\r\n    value: null,\r\n    status: null,\r\n    error: '',\r\n    loggedIn: false\r\n}\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SET_STATUS:\r\n            \r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n            case SET_LOGGED_IN:\r\n                return {\r\n                    ...state,\r\n                    loggedIn: action.status\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setStatusAC = (status) => ({ type: SET_STATUS, status });\r\nexport const setUserDataAC = (token, name, status) => ({ type: SET_USER_DATA, payload: {name,token,status}});\r\nexport const setErrorAC = (error) => ({ type: SET_ERROR, error });\r\nexport const setLoggedin = (status) => ({type: SET_LOGGED_IN, status})\r\n\r\nexport const thunk = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n         const response = await login({\r\n                user: {\r\n                    email: data.email,\r\n                    password: data.password,\r\n                }\r\n            })\r\n            let {token,username} = response.data.user;\r\n            let {status} = response.request;\r\n            dispatch(setUserDataAC(token, username, status));\r\n            localStorage.setItem('cool-jwt', response.data.user.token);\r\n            localStorage.setItem('cool-name', response.data.user.username);\r\n            dispatch(setLoggedin(true))\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const RegistrationThunk = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n        const response = await register({\r\n                user: {\r\n                    email: data.email,\r\n                    password: data.password,\r\n                    username: data.name,\r\n                }\r\n            })\r\n            let {token,username} = response.data.user;\r\n            let {status} = response.request;\r\n            dispatch(setUserDataAC(token, username, status))\r\n            localStorage.setItem('cool-jwt', response.data.user.token);\r\n            localStorage.setItem('cool-name', response.data.user.username);\r\n            dispatch(setLoggedin(true))\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default mainReducer;","import instance, {createArticle} from '../API/API'\r\n\r\nconst SET_ARTICLES_DATA = 'SET_ARTICLES_DATA';\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst SET_PAGENUMBER = 'SET_PAGENUMBER';\r\nconst SET_ISLOADED = 'SET_ISLOADED';\r\nconst SET_RECIEVED = 'SET_RECIEVED';\r\nconst GET_CURRENT_ARTICLE = 'GET_CURRENT_ARTICLE';\r\nconst GET_SLUG = 'GET_SLUG';\r\nconst MAKE_FAVORITE = 'MAKE_FAVORITE';\r\nconst MAKE_UNFAVORITE = 'MAKE_UNFAVORITE';\r\nconst SET_DELETED_SLUG = 'SET_DELETED_SLUG';\r\nconst MAKE_FAVORITE_CURRENT_ARTICLE = 'MAKE_FAVORITE_CURRENT_ARTICLE';\r\nconst MAKE_UNFAVORITE_CURRENT_ARTICLE = 'MAKE_UNFAVORITE_CURRENT_ARTICLE';\r\nconst SET_ISCREATED = 'SET_ISCREATED';\r\n\r\nlet initialState = {\r\n    articles: [],\r\n    isLoaded: false,\r\n    isReceived: false,\r\n    pageNumber: 1,\r\n    pageSize: 10,\r\n    error: '',\r\n    articlesQuantity: 0,\r\n    currentArticle: {},\r\n    slug: '',\r\n    isCreated: false\r\n}\r\n\r\nconst articleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ARTICLES_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n            case SET_ERROR:\r\n                return {\r\n                    ...state,\r\n                    error: action.error\r\n            };\r\n            case SET_ISCREATED:\r\n                return {\r\n                    ...state,\r\n                    isCreated: action.isCreated\r\n            };\r\n            case MAKE_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    articles: state.articles.map(el => {\r\n                        if (el.slug === action.slug)\r\n                       { return { ...el,favorited: true,\r\n                        favoritesCount: el.favoritesCount + 1,\r\n                        }}\r\n                        return el\r\n                    })\r\n            };\r\n            case MAKE_UNFAVORITE:\r\n                return {\r\n                    ...state,\r\n                    articles: state.articles.map(el => {\r\n                        if (el.slug === action.slug)\r\n                        {\r\n                        return { ...el,favorited: false,\r\n                            favoritesCount: el.favoritesCount - 1,\r\n                        }\r\n                    }\r\n                    return el\r\n                    })\r\n            };\r\n            case MAKE_FAVORITE_CURRENT_ARTICLE:\r\n                return {\r\n                    ...state,\r\n                    currentArticle: { ...state.currentArticle,favorited: true,\r\n                        favoritesCount: state.currentArticle.favoritesCount + 1,\r\n                    }\r\n            };\r\n            case MAKE_UNFAVORITE_CURRENT_ARTICLE:\r\n                return {\r\n                    ...state,\r\n                    currentArticle: { ...state.currentArticle,favorited: false,\r\n                            favoritesCount: state.currentArticle.favoritesCount - 1,\r\n                        }\r\n            };\r\n            case GET_CURRENT_ARTICLE:\r\n                return {\r\n                    ...state,\r\n                    currentArticle: action.payload,\r\n            };\r\n            case SET_DELETED_SLUG:\r\n                return {\r\n                    ...state,\r\n                    articles: state.articles.filter(el => el.slug !== action.slug)\r\n                }\r\n            case SET_ISLOADED:\r\n                return {\r\n                    ...state,\r\n                    isLoaded: action.isLoaded\r\n            };\r\n            case SET_RECIEVED:\r\n                return {\r\n                    ...state,\r\n                    isReceived: action.isReceived\r\n            };\r\n            case GET_SLUG:\r\n                return {\r\n                    ...state,\r\n                    slug: action.slug\r\n            };\r\n            case SET_PAGENUMBER:\r\n                return {\r\n                    ...state,\r\n                    pageNumber: action.pageNumber\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setArticlesAC = (articles, articlesQuantity, isLoaded) => \r\n({ type: SET_ARTICLES_DATA, payload: {articles, articlesQuantity, isLoaded}});\r\nexport const setErrorAC = (error) => ({ type: SET_ERROR, error });\r\nexport const setCreatedAC = (isCreated) => ({ type: SET_ISCREATED, isCreated });\r\nexport const setDeletedSlug = (slug) => ({type: SET_DELETED_SLUG, slug})\r\nexport const setFavoriteAC = (slug) => ({ type: MAKE_FAVORITE, slug });\r\nexport const setUnfavoriteAC = (slug) => ({ type: MAKE_UNFAVORITE, slug });\r\nexport const setFavoriteCurrentAC = (slug) => ({ type: MAKE_FAVORITE_CURRENT_ARTICLE, slug });\r\nexport const setUnfavoriteCurrentAC = (slug) => ({ type: MAKE_UNFAVORITE_CURRENT_ARTICLE, slug });\r\nexport const setLoadingAC = (isLoaded) => ({ type: SET_ISLOADED, isLoaded });\r\nexport const setRecievedAC = (isReceived) => ({ type: SET_RECIEVED, isReceived });\r\nexport const setPageNumberAC = (pageNumber) => ({ type: SET_PAGENUMBER, pageNumber });\r\nexport const getCurrentArticleAC = (article) =>  ({type: GET_CURRENT_ARTICLE, payload: article})\r\nexport const getSlugAC = (slug) => ({type: GET_SLUG, slug})\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.get(`/api/articles/${slug}`)\r\n            dispatch(getCurrentArticleAC(result.data.article))\r\n            dispatch(setRecievedAC(true))\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport const deleteArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.delete(`/api/articles/${slug}`)\r\n            dispatch(setDeletedSlug(slug))\r\n\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const likeArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.post(`api/articles/${slug}/favorite`)\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n}\r\n\r\nexport const unfavoriteArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.delete(`api/articles/${slug}/favorite`)\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n}\r\n\r\nexport const createArticleThunk = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n           const result = await createArticle(data)\r\n            dispatch(setCreatedAC(true))\r\n        } catch (error) {\r\n            console.log(error.response)\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default articleReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport userReducer from './userReducer';\r\nimport articleReducer from './Article'\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    userData: userReducer,\r\n    articlesData: articleReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","export const getJwt = () => {\r\n    return localStorage.getItem('cool-jwt');\r\n  };\r\n\r\n  export const getName = () => {\r\n    return localStorage.getItem('cool-name');\r\n  }\r\n\r\n  export const isAuth = (value = false) => {\r\n    return getJwt() !== null\r\n  };\r\n\r\n  export const removeJwt = () => {\r\n      return localStorage.removeItem('cool-jwt');\r\n  }\r\n\r\n\r\n  export const getSlug = () => {\r\n    return localStorage.getItem('slug');\r\n  }\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport { RegistrationThunk,setErrorAC } from '../../Redux/userReducer';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Input, Alert } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as Yup from 'yup';\r\nimport cls from './registration.module.scss';\r\nimport { getName } from '../../helpers/token';\r\n\r\nconst RegistrationPage = props => {\r\n  const { status, error, RegistrationThunk, setErrorAC, loggedIn } = props;\r\n  let history = useHistory(); \r\n  if(loggedIn === true && getName() !== null) {\r\n    history.push(\"/forum/articles\");\r\n}\r\n  if( status < 300 && status > 199) {\r\n      history.push(\"/forum/articles\");\r\n  }\r\n\r\n  const resetErrors = () => {\r\n    setErrorAC('')\r\n}\r\n\r\n  return (\r\n    <div className={cls.wrapper}>\r\n      <Formik\r\n        initialValues={{ email: \"\", name: \"\", password: \"\", confirm_password: \"\" }}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n          setSubmitting(false);\r\n          RegistrationThunk({\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name\r\n          })\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          confirm_password: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords dont match'),\r\n        })}\r\n      >\r\n\r\n        {props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            dirty,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            handleReset\r\n          } = props;\r\n          return (\r\n            <form onSubmit={handleSubmit} className={cls.form}>\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Email\r\n              </label>\r\n              <Input\r\n                id=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                type=\"text\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {error !== '' && error.email !== undefined && (\r\n                <div className={cls.errors}>\r\n                <Alert message={`Email ${String(error.email[0])}`} type=\"error\" showIcon />\r\n                </div>\r\n              )}\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Name\r\n              </label>\r\n              <Input\r\n                id=\"name\"\r\n                placeholder=\"Enter your name\"\r\n                type=\"text\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {error !== '' && error.username !== undefined && (\r\n                <div className={cls.errors}>\r\n                <Alert message={`Name ${String(error.username[0])}`} type=\"error\" showIcon />\r\n                </div>\r\n              )}\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Password\r\n              </label>\r\n              <Input\r\n                id=\"password\"\r\n                placeholder=\"Enter your name\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {error !== '' && error.password !== undefined && (\r\n                <div className={cls.errors}>\r\n                <Alert message={`Password ${String(error.password[0])}`} type=\"error\" showIcon />\r\n                </div>\r\n              )}\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Repeat Password\r\n              </label>\r\n              <Input\r\n                id=\"confirm_password\"\r\n                placeholder=\"Enter your name\"\r\n                type=\"password\"\r\n                value={values.confirm_password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {errors.confirm_password && touched.confirm_password && (\r\n                <div className={cls.errors}><p>{errors.confirm_password}</p></div>\r\n              )}\r\n              <div className={cls.buttonsArea}>\r\n              <NavLink to='/forum/LoginPage'> Login page</NavLink>\r\n              <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"outline\"\r\n                onClick={() => { \r\n                  handleReset()\r\n                  resetErrors() }}\r\n                disabled={!dirty || isSubmitting}\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n                </button>\r\n                </div>\r\n                </div>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.userData.error,\r\n  status: state.userData.status,\r\n  loggedIn: state.userData.loggedIn\r\n})\r\n\r\nconst RegistrationPageContainer = connect(mapStateToProps, { RegistrationThunk, setErrorAC })(RegistrationPage)\r\n\r\nexport default RegistrationPageContainer;","import { connect } from 'react-redux';\r\nimport { thunk, setErrorAC } from '../../Redux/userReducer';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Input, Alert } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './login.module.scss';\r\nimport { getName } from '../../helpers/token';\r\n\r\nconst LoginPage = (props) => {\r\n    const { status, error, thunk, setErrorAC, loggedIn } = props;\r\n    let history = useHistory(); \r\n\r\n    if( loggedIn === true && getName() !== null) {\r\n        history.push(\"/forum/articles\");\r\n    }\r\n\r\n    const resetErrors = () => {\r\n        setErrorAC('')\r\n    }\r\n\r\n    if (status < 300 && status > 199) {\r\n        loggedIn === true && history.push(\"/forum/articles\")\r\n        return 'redirecting...'\r\n        }\r\n        const redirectToArticles = () => {\r\n            history.push(\"/forum/articles\");\r\n        }\r\n    return (\r\n        <div className={cls.wrapper}>\r\n           <button \r\n           onClick={redirectToArticles}\r\n           className={cls.articles}> <p> Atricles</p></button>\r\n            <Formik\r\n                initialValues={{ email: \"\", password: \"\" }}\r\n                onSubmit={async values => {\r\n                    await new Promise(resolve => setTimeout(resolve, 500));\r\n                    thunk({\r\n                        email: values.email,\r\n                        password: values.password\r\n                    })\r\n                }}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        dirty,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        handleReset\r\n                    } = props;\r\n                    return (\r\n                        <form onSubmit={handleSubmit} className={cls.form}>\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Email\r\n                             </label>\r\n                            <Input\r\n                                id=\"email\"\r\n                                placeholder=\"Enter your email\"\r\n                                type=\"text\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                password\r\n                                </label>\r\n                            <Input\r\n                                id=\"password\"\r\n                                placeholder=\"Enter your name\"\r\n                                type=\"password\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            {error !== '' && error !== 'undefined' && (\r\n                                <div className={cls.errors}>\r\n                                <Alert message={`email or password ${error[\"email or password\"]}`} type=\"error\" showIcon />\r\n                                </div>\r\n                            )}\r\n                            <div className={cls.buttonsArea}>\r\n                                <NavLink to='/forum/Registration'>Register</NavLink>\r\n                                <div>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"outline\"\r\n                                        onClick={() => { \r\n                                            handleReset()\r\n                                            resetErrors()\r\n                                        }}\r\n                                        disabled={!dirty || isSubmitting}\r\n                                    >\r\n                                        Reset\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"submit\" disabled={isSubmitting}\r\n                                        >\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    error: state.userData.error,\r\n    status: state.userData.status,\r\n    loggedIn : state.userData.loggedIn\r\n})\r\n\r\nconst LoginPageContainer = connect(mapStateToProps, { thunk, setErrorAC })(LoginPage)\r\n\r\nexport default LoginPageContainer;","import React from 'react'\r\nimport { parseISO, differenceInMinutes, getTime, differenceInHours, differenceInDays } from 'date-fns';\r\n\r\nexport const timeCreator = (createdAt) => {\r\n    const date = Date.now()\r\n    return (\r\n        <div>\r\n        {differenceInMinutes(date, getTime(parseISO(`${createdAt}`))) >= 60\r\n        ? <h4>{`${differenceInMinutes(date, getTime(parseISO(`${createdAt}`)))\r\n            - (differenceInHours(date, getTime(parseISO(`${createdAt}`))) * 60)} min`}</h4>\r\n        : differenceInMinutes(date, getTime(parseISO(`${createdAt}`))) < 1\r\n            ? <h4>less than minute</h4>\r\n            : <h4>{`${differenceInMinutes(date, getTime(parseISO(`${createdAt}`)))} min`}</h4>\r\n    }\r\n\r\n    {differenceInHours(date, getTime(parseISO(`${createdAt}`))) >= 24 &&\r\n        differenceInHours(date, getTime(parseISO(`${createdAt}`)))\r\n        - (differenceInDays(date, getTime(parseISO(`${createdAt}`))) * 24) > 0\r\n        ?\r\n        <h4>{`${differenceInHours(date, getTime(parseISO(`${createdAt}`)))\r\n            - (differenceInDays(date, getTime(parseISO(`${createdAt}`))) * 24)} hours`}</h4>\r\n        : ''}\r\n    {differenceInHours(date, getTime(parseISO(`${createdAt}`))) < 24\r\n        && differenceInHours(date, getTime(parseISO(`${createdAt}`))) > 0\r\n        ? <h4> {`${differenceInHours(date, getTime(parseISO(`${createdAt}`)))} hours`} </h4>\r\n        : ''}\r\n\r\n    {differenceInDays(date, getTime(parseISO(`${createdAt}`))) > 0 ?\r\n        <h4>{`${differenceInDays(date, getTime(parseISO(`${createdAt}`)))} days `}</h4>\r\n        : ''\r\n    }\r\n    </div>\r\n    )\r\n}","export const onChangePageNumber = (pageNumber, pageSize) => {\r\n    return pageNumber === 1 ? 0 : (pageNumber - 1) * (pageSize)\r\n  };\r\n  \r\n  export default onChangePageNumber;","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport instance from '../../API/API';\r\nimport cls from './all.module.scss';\r\nimport { Pagination, Button, notification } from 'antd';\r\nimport {\r\n    setArticlesAC,\r\n    setPageNumberAC,\r\n    setLoadingAC,\r\n    getArticle,\r\n    getSlugAC,\r\n    deleteArticle,\r\n    likeArticle,\r\n    unfavoriteArticle,\r\n    setFavoriteAC,\r\n    setUnfavoriteAC,\r\n    setErrorAC,\r\n    setRecievedAC\r\n} from '../../Redux/Article';\r\nimport {setStatusAC, setLoggedin} from '../../Redux/userReducer';\r\nimport { getName, isAuth, removeJwt } from '../../helpers/token';\r\nimport { HeartOutlined, HeartFilled, CloseCircleOutlined, SettingFilled } from '@ant-design/icons';\r\nimport { timeCreator } from '../../helpers/timeCreator';\r\nimport { onChangePageNumber } from '../../helpers/pagination';\r\n\r\nconst AllArticles = (props) => {\r\n    const history = useHistory();\r\n    const username = getName();\r\n    const { articles, \r\n        pageSize, \r\n        pageNumber, \r\n        setArticlesAC, \r\n        setLoadingAC, \r\n        setPageNumberAC, \r\n        getSlugAC, \r\n        setFavoriteAC, \r\n        setUnfavoriteAC,\r\n        setErrorAC,\r\n        getArticle,\r\n        setRecievedAC,\r\n        setLoggedin\r\n    } = props\r\n    const date = Date.now()\r\n\r\n    const [pagesQuantity, seTpagesQuantity] = useState(1);\r\n    const [page, seTpage] = useState(props.pageNumber)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await instance.get(`/api/articles?offset=${onChangePageNumber(pageNumber,pageSize)}&limit=${pageSize}`)\r\n                setArticlesAC(result.data.articles, result.data.articlesCount, true, result.data.favorited)\r\n                seTpagesQuantity(Math.ceil(result.data.articlesCount / pageSize))\r\n            } catch (error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [pageNumber])\r\n\r\n    const onChange = page => {\r\n        setLoadingAC(false)\r\n        setPageNumberAC(page)\r\n        seTpage(page)\r\n    };\r\n    const getSlug = (slug) => {\r\n        history.push(\"/forum/article\");\r\n        localStorage.setItem('slug', slug);\r\n        getSlugAC(slug)\r\n    }\r\n    const deleteArticle = (slug) => {\r\n        props.deleteArticle(slug)\r\n    }\r\n\r\n    const close = () => {\r\n        console.log(\r\n          'Notification was closed. Either the close button was clicked or duration time elapsed.',\r\n        );\r\n      };\r\n\r\n    const openNotification = (slug) => {\r\n        const key = `open${Date.now()}`;\r\n        const btn = (\r\n          <Button type=\"primary\" size=\"small\" onClick={() =>{ \r\n              notification.close(key)\r\n            deleteArticle(slug)\r\n          }}>\r\n            Confirm\r\n          </Button>\r\n        );\r\n        notification.open({\r\n          message: 'Notification Title',\r\n          description:\r\n            'Are you really want to delete this article?',\r\n          btn,\r\n          key,\r\n          onClose: close,\r\n        });\r\n    };\r\n\r\n    const likeArticle = (slug) => {\r\n        props.likeArticle(slug)\r\n        setFavoriteAC(slug)\r\n    }\r\n\r\n    const dislikeArticle = (slug) => {\r\n        props.unfavoriteArticle(slug)\r\n        setUnfavoriteAC(slug)\r\n    }\r\n    const createArtice = () => {\r\n        history.push(\"/forum/developmentPage\");\r\n        setRecievedAC(true)\r\n    }\r\n    const redirectToLogin = () => {\r\n        props.setStatusAC({data: 401});\r\n        history.push(\"/forum/LoginPage\");\r\n        setLoggedin(false)\r\n    }\r\n    const deleteToken = () => {\r\n        removeJwt('cool-jwt')\r\n        props.history.push('/forum/LoginPage');\r\n        return props.setStatusAC({data: 401});\r\n        setErrorAC('')\r\n      }\r\n    return (\r\n        <div className={cls.wrapper}>\r\n            {!isAuth() \r\n            ? <div className={cls.registered}> <button\r\n                onClick={redirectToLogin}\r\n                className={cls.articles}> <h4>Login</h4></button> </div>\r\n                : <div className={cls.registered}> <button\r\n                onClick={createArtice}> <h4>\r\n                    Create Article</h4>\r\n            </button>\r\n                <button\r\n                    onClick={deleteToken}\r\n                > <h4> Log Out</h4> </button> </div>\r\n            }\r\n            <div className={cls.pagination}>\r\n                {pagesQuantity !== 0 &&\r\n                    <Pagination\r\n                        defaultCurrent={1}\r\n                        current={page}\r\n                        onChange={onChange}\r\n                        showSizeChanger={false}\r\n                        pageSize={props.pageSize}\r\n                        total={props.articlesQuantity}\r\n                    />}\r\n            </div>\r\n            <ul className={cls.ul}>\r\n                {articles !== 'undefined' && props.isLoaded && articles.map((el, index) => {\r\n                    return <li key={index}\r\n                        onClick={() => getSlug(el.slug)}\r\n                    >\r\n                        <div className={cls.card}>\r\n                            <img src=\"https://cdn.jevelin.shufflehound.com/wp-content/uploads/sites/11/2016/11/14-768x720.jpg\" alt=\"mountain\" />\r\n                            <div className={cls.Card_leftside}>\r\n                                <div className={cls.authorInfo}>\r\n\r\n                                    <div className={cls.dateValue}>\r\n                                        <p>{`created by ${el.author.username}`}</p>\r\n                                        <div className={cls.reversedDate}>\r\n                <h4>{timeCreator(el.createdAt) }</h4>\r\n                                        </div>\r\n                                        <h4>ago</h4>\r\n                                    </div>\r\n                                    <h2>{el.title}</h2>\r\n                                    {el.tagList.length > 0 ?\r\n                                        <h4>{`tags: ${el.tagList.join(', ')}`}</h4>\r\n                                        : <h4>tags: -</h4>\r\n                                    }\r\n                                </div>\r\n                                <div className={cls.cardFooter}>\r\n                                    {username === el.author.username &&\r\n                                        <button\r\n                                        className={cls.change}\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                getSlug(el.slug)\r\n                                                getArticle(el.slug)\r\n                                                history.push(\"/forum/developmentPage\")\r\n                                            }}\r\n                                        >\r\n                                            <h4> Change Article <SettingFilled /></h4>\r\n                                        </button>}\r\n                                    {username === el.author.username &&\r\n                                        <button\r\n                                        className={cls.delete}\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                openNotification(el.slug)\r\n                                            }}\r\n                                        >\r\n                                            <h4> Delete Article <CloseCircleOutlined /></h4>\r\n                                        </button>}\r\n                                    {isAuth() && <div>\r\n                                        {el.favorited ? <button\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                dislikeArticle(el.slug)\r\n                                            }}\r\n                                        ><h5><HeartFilled /></h5><h5>{el.favoritesCount}</h5></button>\r\n                                            : <button\r\n                                                onClick={(e) => {\r\n                                                    e.stopPropagation();\r\n                                                    likeArticle(el.slug)\r\n                                                }}\r\n                                            ><h5><HeartOutlined /></h5><h5>{el.favoritesCount}</h5></button>}</div>}\r\n                                    {!isAuth() && <h5>likes: {el.favoritesCount}</h5>}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n            <div>\r\n                <p>{!props.isLoaded && '...loading'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    articles: state.articlesData.articles,\r\n    pageSize: state.articlesData.pageSize,\r\n    pageNumber: state.articlesData.pageNumber,\r\n    isLoaded: state.articlesData.isLoaded,\r\n    articlesQuantity: state.articlesData.articlesQuantity,\r\n    favoriteArticles: state.articlesData.favoriteArticles\r\n})\r\n\r\nconst AllArticlesContainer = connect(mapStateToProps,\r\n    {\r\n        setArticlesAC,\r\n        setPageNumberAC,\r\n        setLoadingAC,\r\n        getArticle,\r\n        getSlugAC,\r\n        deleteArticle,\r\n        unfavoriteArticle,\r\n        likeArticle,\r\n        setFavoriteAC,\r\n        setUnfavoriteAC,\r\n        setStatusAC,\r\n        setErrorAC,\r\n        setRecievedAC,\r\n        setLoggedin\r\n    })(AllArticles)\r\n\r\nexport default AllArticlesContainer;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuth } from \"./token\";\r\n\r\nexport const ProtectedRoute = ({\r\n  component: Component, loggedIn,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        console.log(props)\r\n        if (loggedIn === true) {\r\n            return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/forum/LoginPage\",\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { HeartOutlined, HeartFilled } from '@ant-design/icons';\r\nimport { Spin } from 'antd';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './current.module.scss';\r\nimport instance from '../../API/API';\r\nimport {\r\n    unfavoriteArticle,\r\n    likeArticle,\r\n    setFavoriteCurrentAC,\r\n    setUnfavoriteCurrentAC,\r\n    getCurrentArticleAC,\r\n} from '../../Redux/Article';\r\nimport { getSlug, isAuth } from '../../helpers/token';\r\nimport { timeCreator } from '../../helpers/timeCreator';\r\n\r\n\r\n\r\nconst Article = (props) => {\r\n    const { setFavoriteCurrentAC, setUnfavoriteCurrentAC, likeArticle, unfavoriteArticle, article } = props;\r\n    const { body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt } = article;\r\n    const date = Date.now();\r\n    let history = useHistory();\r\n    const sessionSlug = localStorage.getItem('slug')\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await instance.get(`/api/articles/${sessionSlug}`)\r\n                props.getCurrentArticleAC(result.data.article)\r\n            } catch (error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n        if (sessionSlug !== null) {\r\n            fetchData();\r\n        }\r\n    }, [sessionSlug, body])\r\n\r\n    const addLikeToArticle = (slug) => {\r\n        likeArticle(slug)\r\n        setFavoriteCurrentAC(slug)\r\n    }\r\n\r\n    const dislikeArticle = (slug) => {\r\n        unfavoriteArticle(slug)\r\n        setUnfavoriteCurrentAC(slug)\r\n    }\r\n    const redirectToArticles = () => {\r\n        history.push(\"/forum/articles\");\r\n        localStorage.setItem('slug', '');\r\n        props.getCurrentArticleAC({})\r\n    }\r\n\r\n    return (\r\n        <div className={cls.wrapper}>\r\n             <button \r\n             className={cls.redirect}\r\n            onClick={redirectToArticles}\r\n            type=\"primary\" key=\"console\">Atricles</button>\r\n            \r\n            {article.hasOwnProperty('body') \r\n            ? <div className={cls.body}>\r\n                <img src='https://cdn.jevelin.shufflehound.com/wp-content/uploads/sites/28/2019/09/101_0001_alexandru-acea-bbokzTQjB9o-unsplash-1024x777.jpg' alt=\"pic\" />\r\n                <div className={cls.dateValue}>\r\n                <p>{`created by ${author.username}`}</p>\r\n                    <div className={cls.reversedDate}>\r\n                       <h4> {timeCreator(createdAt)}</h4>\r\n                    </div>\r\n                    <h4>ago</h4>\r\n                </div>\r\n                <h2>{title}</h2>\r\n                <h5>{`description: ${description}`}</h5>\r\n                <div className={cls.article_body}>\r\n                <p>{body}</p>\r\n                </div>\r\n                <ul>\r\n                    <span>{tagList.length > 0 ? 'tags:' : 'tags: -' }</span>\r\n                    {tagList.map((el, index) => {\r\n                        return <li key={index}><p>{el}</p></li>\r\n                    })}\r\n                </ul>\r\n               {isAuth() && <div>\r\n                {article.favorited ? <button\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        dislikeArticle(getSlug())\r\n                    }}\r\n                ><h5><HeartFilled /></h5><h5>{article.favoritesCount}</h5></button>\r\n                    : <button\r\n                    disabled={!isAuth()}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            addLikeToArticle(getSlug())\r\n                        }}\r\n                    ><h5><HeartOutlined /></h5><h5>{article.favoritesCount}</h5></button>}</div>}\r\n                 {!isAuth() && <h5>{`likes: ${article.favoritesCount}`}</h5> }   \r\n            </div>\r\n            : <div><Spin /></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    article: state.articlesData.currentArticle,\r\n})\r\n\r\nconst ArticleContainer = connect(mapStateToProps, {\r\n    unfavoriteArticle,\r\n    likeArticle,\r\n    setFavoriteCurrentAC,\r\n    setUnfavoriteCurrentAC,\r\n    getCurrentArticleAC\r\n})(Article)\r\n\r\nexport default ArticleContainer;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: this.props.tagList,\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const tags = this.state.tags.filter((tag) => tag !== removedTag);\r\n    this.props.updateTagList(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.props.updateTagList(tags);\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = (e) => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = (input) => (this.input = input);\r\n\r\n  saveEditInputRef = (input) => (this.editInput = input);\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <div>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              color=\"#108ee9\"\r\n              key={tag}\r\n              closable\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={(e) => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Tag\r\n          </Tag>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup;","import { connect } from 'react-redux';\r\nimport { createArticleThunk, setCreatedAC, setErrorAC, getCurrentArticleAC, setRecievedAC } from '../../Redux/Article';\r\nimport React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Input, Result, Alert, Spin, } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './add.module.scss';\r\nimport * as Yup from 'yup';\r\nimport instance, { updateArticle } from '../../API/API';\r\n\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nimport EditableTagGroup from '../../helpers/tagsCreator';\r\n\r\nconst EditArticle = (props) => {\r\n    const {\r\n        createArticleThunk,\r\n        isCreated,\r\n        setCreatedAC,\r\n        setErrorAC,\r\n        currentArticle,\r\n        isReceived,\r\n        getCurrentArticleAC,\r\n        setRecievedAC } = props;\r\n    const { body, description, title, tagList } = currentArticle;\r\n\r\n    let history = useHistory();\r\n    const sessionSlug = localStorage.getItem('slug');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await instance.get(`/api/articles/${sessionSlug}`)\r\n                getCurrentArticleAC(result.data.article)\r\n                setRecievedAC(true)\r\n            } catch (error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n        if (sessionSlug !== null && isReceived === false) {\r\n            fetchData();\r\n        }\r\n    }, [body, isReceived])\r\n\r\n    const resetErrors = () => {\r\n        setErrorAC('')\r\n    }\r\n\r\n    const redirectToArticles = () => {\r\n        history.push(\"/forum/articles\");\r\n        setCreatedAC(false);\r\n        setErrorAC('')\r\n        getCurrentArticleAC({})\r\n        setRecievedAC(false)\r\n    }\r\n    return (\r\n        <div className={cls.wrapper}>\r\n            {isCreated &&\r\n                <Result\r\n                    status=\"success\"\r\n                    title={currentArticle.hasOwnProperty('body')\r\n                        ? \"Article updated successfully\"\r\n                        : \"Article created successfully\"}\r\n                    extra={[\r\n                        <button\r\n                            onClick={redirectToArticles}\r\n                            type=\"primary\" key=\"console\">\r\n                            Go to Atricles page </button>\r\n                    ]}\r\n                />\r\n            }\r\n            {!isReceived && <Spin size=\"large\" />}\r\n\r\n            {!isCreated && isReceived &&\r\n                <Formik\r\n\r\n                    initialValues={{\r\n                        title: title || \"\", description: description || \"\", body: body || \"\", tagList: tagList || [],\r\n                    }}\r\n                    onSubmit={async values => {\r\n                        await new Promise(resolve => setTimeout(resolve, 500));\r\n                        if (currentArticle.hasOwnProperty('body')) {\r\n                            const newValues = { ...values };\r\n                            if (values.tagList.length === 0) {\r\n                                newValues.tagList = [''];\r\n                            }\r\n                            updateArticle({\r\n                                article: {\r\n                                    title: newValues.title,\r\n                                    description: newValues.description,\r\n                                    body: newValues.body,\r\n                                    tagList: newValues.tagList\r\n                                }\r\n                            })\r\n                            setCreatedAC(true)\r\n                        }\r\n                        else {\r\n                            createArticleThunk({\r\n                                article: {\r\n                                    title: values.title,\r\n                                    description: values.description,\r\n                                    body: values.body,\r\n                                    tagList: values.tagList\r\n                                }\r\n                            })\r\n                            setCreatedAC(true)\r\n                        }\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                        title: Yup.string()\r\n                            .required('field shouldnt be empty'),\r\n                        description: Yup.string()\r\n                            .required('field shouldnt be empty'),\r\n                        body: Yup.string()\r\n                            .required('field shouldnt be empty'),\r\n                    })}\r\n                >\r\n                    {props => {\r\n                        const {\r\n                            values,\r\n                            dirty,\r\n                            errors,\r\n                            touched,\r\n                            isSubmitting,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            handleSubmit,\r\n                            handleReset,\r\n                            setFieldValue\r\n                        } = props;\r\n                        return (\r\n                            <div>\r\n                                <button\r\n                                    onClick={redirectToArticles}\r\n                                    className={cls.articles}> <p> Atricles</p></button>\r\n\r\n                                <form onSubmit={handleSubmit} className={cls.form}>\r\n                                    <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                        Title\r\n                                  </label>\r\n                                    <Input\r\n                                        id=\"title\"\r\n                                        placeholder=\"Enter title of article\"\r\n                                        type=\"text\"\r\n                                        value={values.title}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={cls.input}\r\n                                    />\r\n                                    {errors.title && touched.title && (\r\n                                        <div className={cls.errors}><Alert message={errors.title} type=\"error\" showIcon /></div>\r\n                                    )}\r\n                                    <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                        Description\r\n                                     </label>\r\n                                    <Input\r\n                                        id=\"description\"\r\n                                        placeholder=\"Enter description of article\"\r\n                                        type=\"text\"\r\n                                        value={values.description}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={cls.input}\r\n                                    />\r\n                                    {errors.description && touched.description && (\r\n                                        <div className={cls.errors}><Alert message={errors.description} type=\"error\" showIcon /></div>\r\n                                    )}\r\n                                    <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                        Body\r\n                                     </label>\r\n                                    <Input.TextArea\r\n                                        id=\"body\"\r\n                                        placeholder=\"Enter body of article\"\r\n                                        type=\"text\"\r\n                                        value={values.body}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={cls.input}\r\n                                    />\r\n                                    {errors.body && touched.body && (\r\n                                        <div className={cls.errors}><Alert message={errors.body} type=\"error\" showIcon /></div>\r\n                                    )}\r\n                                    <EditableTagGroup\r\n                                        tagList={values.tagList}\r\n                                        updateTagList={(tags) => {\r\n                                            setFieldValue('tagList', tags);\r\n                                        }}\r\n                                    />\r\n                                    <div className={cls.buttonsArea}>\r\n                                        <div>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className=\"outline\"\r\n                                                onClick={() => {\r\n                                                    resetErrors()\r\n                                                    handleReset()\r\n                                                }}\r\n                                                disabled={!dirty || isSubmitting}\r\n                                            >\r\n                                                Reset\r\n                                         </button>\r\n                                            <button\r\n                                                type=\"submit\" disabled={isSubmitting}\r\n                                            >\r\n                                                Submit\r\n                                         </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isCreated: state.articlesData.isCreated,\r\n    status: state.userData.status,\r\n    currentArticle: state.articlesData.currentArticle,\r\n    isReceived: state.articlesData.isReceived\r\n})\r\n\r\nconst EditArticleContainer = connect(mapStateToProps,\r\n    {\r\n        createArticleThunk,\r\n        setCreatedAC,\r\n        setErrorAC,\r\n        getCurrentArticleAC,\r\n        setRecievedAC\r\n    })(EditArticle)\r\n\r\nexport default EditArticleContainer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport RegistrationPageContainer from './Components/RegistrationPage/RegistrationPageContainer';\r\nimport LoginPageContainer from './Components/LoginPage/loginPageContainer';\r\nimport AllArticlesContainer from './Components/AllArticles/AllArticles'\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport { ProtectedRoute } from './helpers/protectedRoute';\r\nimport ArticleContainer from './Components/CurrentArticle/CurrentArticle';\r\nimport EditArticleContainer from './Components/AddEditArticle/AddArticle';\r\n\r\nconst Routes = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/forum/LoginPage' component={LoginPageContainer} />\r\n      <Route path='/forum/articles' component={AllArticlesContainer} />\r\n      <Route path='/forum/Registration' component={RegistrationPageContainer}/>\r\n      <Route path='/forum/developmentPage' component={EditArticleContainer}/>\r\n      <Route path='/forum/article' component={ArticleContainer}/>\r\n      <Route path='/forum/editPage' component={EditArticleContainer}/>\r\n      <ProtectedRoute exact path='/forum/' component={AllArticlesContainer} loggedIn={props.loggedIn} />\r\n    </Switch>\r\n  ) \r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loggedIn: state.userData.loggedIn,\r\n})\r\n\r\nconst App = connect(mapStateToProps)(Routes)\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './Redux/redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"registration_wrapper__3w-sm\",\"form\":\"registration_form__1d1UH\",\"input\":\"registration_input__3F6qd\",\"buttonsArea\":\"registration_buttonsArea__18T8o\",\"errors\":\"registration_errors__1_bjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"add_wrapper__2yR5Y\",\"tagsArea\":\"add_tagsArea__2Xt_i\",\"tagsUl\":\"add_tagsUl__1KwEj\",\"tagsInput\":\"add_tagsInput__3gxU1\",\"form\":\"add_form__mJaet\",\"input\":\"add_input__38-jZ\",\"buttonsArea\":\"add_buttonsArea__vAAl_\",\"errors\":\"add_errors__1rtCm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__1DHUi\",\"articles\":\"login_articles__kOmqn\",\"form\":\"login_form__2l9yv\",\"input\":\"login_input__2o3z6\",\"buttonsArea\":\"login_buttonsArea__1JAdq\",\"errors\":\"login_errors__H-sF-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"current_wrapper__2mrkJ\",\"redirect\":\"current_redirect__3P4--\",\"dateValue\":\"current_dateValue__2Jam1\",\"reversedDate\":\"current_reversedDate__2diIZ\",\"body\":\"current_body__W34vA\",\"article_body\":\"current_article_body__3azvy\"};"],"sourceRoot":""}
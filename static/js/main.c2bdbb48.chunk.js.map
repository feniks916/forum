{"version":3,"sources":["Components/MainPage/main.module.scss","Components/ArticlesPAge/all.module.scss","App.module.scss","Components/AddNewArticlePage/add.module.scss","API/API.js","Redux/mainPageReducer.js","Redux/Article.js","Redux/redux.js","helpers/token.js","Components/RegistrationPage/RegistrationPageContainer.jsx","Components/LoginPage/loginPageContainer.jsx","Components/MainPage/MainPageContainer.jsx","Components/ArticlesPAge/AllArticles.jsx","helpers/protectedRoute.jsx","Components/CurrentArticlePage/CurrentArticle.jsx","Components/AddNewArticlePage/AddArticle.jsx","Components/EditingPage/EditingPage.jsx","App.jsx","serviceWorker.js","index.jsx","Components/EditingPage/edit.module.scss","Components/RegistrationPage/registration.module.scss","Components/LoginPage/login.module.scss","Components/CurrentArticlePage/current.module.scss"],"names":["module","exports","instance","axios","baseURL","interceptors","request","use","config","token","sessionStorage","getItem","headers","Authorization","initialState","username","value","status","error","setStatusAC","type","setUserDataAC","name","payload","setErrorAC","mainReducer","state","action","articles","isLoaded","pageNumber","pageSize","articlesQuantity","currentArticle","slug","isCreated","setCreatedAC","setDeletedSlug","getCurrentArticleAC","body","author","createdAt","description","favoritesCount","favorited","title","tagList","updatedAt","likeArticle","dispatch","a","post","result","console","log","response","data","errors","unfavoriteArticle","delete","articleReducer","map","el","filter","reducers","combineReducers","userData","mainPageReducer","articlesData","store","createStore","applyMiddleware","thunkMiddleware","getJwt","getName","isAuth","removeJwt","removeItem","getSlug","RegistrationPageContainer","connect","RegistrationThunk","registerData","user","email","password","setItem","props","history","useHistory","push","className","cls","wrapper","initialValues","confirm_password","onSubmit","values","setSubmitting","Promise","resolve","setTimeout","validationSchema","Yup","shape","oneOf","touched","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","form","htmlFor","style","display","id","placeholder","onChange","onBlur","input","undefined","String","buttonsArea","to","onClick","disabled","LoginPageContainer","thunk","loginData","mainPageContainer","useState","setName","useEffect","key","get","fetchData","AllArticlesContainer","favoriteArticles","setArticlesAC","setPageNumberAC","setLoadingAC","getArticle","article","getSlugAC","deleteArticle","setFavoriteAC","setUnfavoriteAC","date","Date","now","pagesQuantity","seTpagesQuantity","page","seTpage","articlesCount","Math","ceil","registered","pagination","defaultCurrent","current","showSizeChanger","total","ul","index","card","src","alt","Card_leftside","authorInfo","dateValue","reversedDate","differenceInMinutes","getTime","parseISO","differenceInHours","differenceInDays","length","join","cardFooter","change","e","stopPropagation","SettingFilled","CloseCircleOutlined","HeartFilled","HeartOutlined","ProtectedRoute","Component","component","rest","render","pathname","from","location","SingleArticleContainer","setFavoriteCurrentAC","setUnfavoriteCurrentAC","sessionSlug","hasOwnProperty","redirect","article_body","DevelopmentPageContainer","createArticleThunk","articleData","tagsArray","setTagsArray","tagInput","removeTag","i","arr","splice","inputKeyDown","val","target","find","tag","toLowerCase","notification","open","message","concat","redirectToArticles","extra","TextArea","tagsArea","tagsUl","tagsInput","onKeyDown","ref","c","EditPageContainer","updatedData","put","App","path","exact","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2bdbb48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main_wrapper__36HIk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"all_wrapper__1g5rn\",\"registered\":\"all_registered__19mwW\",\"ul\":\"all_ul__14Yu3\",\"cardFooter\":\"all_cardFooter__3SmL2\",\"change\":\"all_change__IzGnM\",\"delete\":\"all_delete__1Yy8u\",\"authorInfo\":\"all_authorInfo__3YXru\",\"dateValue\":\"all_dateValue__3yyQ_\",\"reversedDate\":\"all_reversedDate__3Rkt_\",\"card\":\"all_card__20v59\",\"Card_leftside\":\"all_Card_leftside__zZwjE\",\"textBody\":\"all_textBody__XPIrQ\",\"pagination\":\"all_pagination__3KTEm\",\"form\":\"all_form__BeSfJ\",\"input\":\"all_input__21E_i\",\"buttonsArea\":\"all_buttonsArea__2Mrhu\",\"errors\":\"all_errors__35JYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__3Aexq\",\"ul\":\"App_ul__zXSjm\",\"ticketsArea\":\"App_ticketsArea__lzTW3\",\"wrapper\":\"App_wrapper__2HLsp\",\"img\":\"App_img__3MMz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"add_wrapper__18aeq\",\"tagsArea\":\"add_tagsArea__VK1a6\",\"tagsUl\":\"add_tagsUl__2iwYx\",\"tagsInput\":\"add_tagsInput__uttKl\",\"form\":\"add_form__2ZEfx\",\"input\":\"add_input__s4GrR\",\"buttonsArea\":\"add_buttonsArea__1GJgx\",\"errors\":\"add_errors__2krLL\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://conduit.productionready.io',\r\n});\r\n\r\ninstance.interceptors.request.use(config => {\r\n  const token = sessionStorage.getItem('cool-jwt');\r\n  if (token) {\r\n    config.headers.Authorization = `Token ${token}`;\r\n  }\r\n  return config\r\n  })\r\n\r\nexport default instance;\r\n\r\nexport const register = registerData =>\r\ninstance.post('/api/users', registerData)\r\n\r\nexport const updateArticle = updatedData =>\r\ninstance.put(`/api/articles/${sessionStorage.getItem('slug')}`, updatedData)\r\n\r\nexport const login = (loginData) => \r\n  instance.post('/api/users/login', loginData)\r\n\r\nexport const createArticle = (articleData) => \r\n  instance.post('/api/articles' ,articleData)\r\n","import { login, register } from '../API/API'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_ERROR = 'SET_ERROR';\r\n\r\nlet initialState = {\r\n    username: '',\r\n    token: '',\r\n    value: null,\r\n    status: null,\r\n    error: null\r\n}\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SET_STATUS:\r\n            \r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setStatusAC = (status) => ({ type: SET_STATUS, status });\r\nexport const setUserDataAC = (token, name, status) => ({ type: SET_USER_DATA, payload: {name,token,status}});\r\nexport const setErrorAC = (error) => ({ type: SET_ERROR, error });\r\n\r\nexport const thunk = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n         const response = await login({\r\n                user: {\r\n                    email: data.email,\r\n                    password: data.password,\r\n                }\r\n            })\r\n            let {token,username} = response.data.user;\r\n            let {status} = response.request;\r\n            dispatch(setUserDataAC(token, username, status));\r\n            sessionStorage.setItem('cool-jwt', response.data.user.token);\r\n            sessionStorage.setItem('cool-name', response.data.user.username);\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const RegistrationThunk = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n        const response = await register({\r\n                user: {\r\n                    email: data.email,\r\n                    password: data.password,\r\n                    username: data.name,\r\n                }\r\n            })\r\n            let {token,username} = response.data.user;\r\n            let {status} = response.request;\r\n            dispatch(setUserDataAC(token, username, status))\r\n            sessionStorage.setItem('cool-jwt', response.data.user.token);\r\n            sessionStorage.setItem('cool-name', response.data.user.username);\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default mainReducer;","import instance, {createArticle} from '../API/API'\r\n\r\nconst SET_ARTICLES_DATA = 'SET_ARTICLES_DATA';\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst SET_PAGENUMBER = 'SET_PAGENUMBER';\r\nconst SET_ISLOADED = 'SET_ISLOADED';\r\nconst GET_CURRENT_ARTICLE = 'GET_CURRENT_ARTICLE';\r\nconst GET_SLUG = 'GET_SLUG';\r\nconst MAKE_FAVORITE = 'MAKE_FAVORITE';\r\nconst MAKE_UNFAVORITE = 'MAKE_UNFAVORITE';\r\nconst SET_DELETED_SLUG = 'SET_DELETED_SLUG';\r\nconst MAKE_FAVORITE_CURRENT_ARTICLE = 'MAKE_FAVORITE_CURRENT_ARTICLE';\r\nconst MAKE_UNFAVORITE_CURRENT_ARTICLE = 'MAKE_UNFAVORITE_CURRENT_ARTICLE';\r\nconst SET_ISCREATED = 'SET_ISCREATED';\r\n\r\nlet initialState = {\r\n    articles: [],\r\n    isLoaded: false,\r\n    pageNumber: 1,\r\n    pageSize: 10,\r\n    error: '',\r\n    articlesQuantity: 0,\r\n    currentArticle: {},\r\n    slug: '',\r\n    isCreated: false\r\n}\r\n\r\nconst articleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ARTICLES_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n            case SET_ERROR:\r\n                return {\r\n                    ...state,\r\n                    error: action.error\r\n            };\r\n            case SET_ISCREATED:\r\n                return {\r\n                    ...state,\r\n                    isCreated: action.isCreated\r\n            };\r\n            case MAKE_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    articles: state.articles.map(el => {\r\n                        if (el.slug === action.slug)\r\n                       { return { ...el,favorited: true,\r\n                        favoritesCount: el.favoritesCount + 1,\r\n                        }}\r\n                        return el\r\n                    })\r\n            };\r\n            case MAKE_UNFAVORITE:\r\n                return {\r\n                    ...state,\r\n                    articles: state.articles.map(el => {\r\n                        if (el.slug === action.slug)\r\n                        {\r\n                        return { ...el,favorited: false,\r\n                            favoritesCount: el.favoritesCount - 1,\r\n                        }\r\n                    }\r\n                    return el\r\n                    })\r\n            };\r\n            case MAKE_FAVORITE_CURRENT_ARTICLE:\r\n                return {\r\n                    ...state,\r\n                    currentArticle: { ...state.currentArticle,favorited: true,\r\n                        favoritesCount: state.currentArticle.favoritesCount + 1,\r\n                    }\r\n            };\r\n            case MAKE_UNFAVORITE_CURRENT_ARTICLE:\r\n                return {\r\n                    ...state,\r\n                    currentArticle: { ...state.currentArticle,favorited: false,\r\n                            favoritesCount: state.currentArticle.favoritesCount - 1,\r\n                        }\r\n            };\r\n            case GET_CURRENT_ARTICLE:\r\n                return {\r\n                    ...state,\r\n                    currentArticle: action.payload,\r\n            };\r\n            case SET_DELETED_SLUG:\r\n                return {\r\n                    ...state,\r\n                    articles: state.articles.filter(el => el.slug !== action.slug)\r\n                }\r\n            case SET_ISLOADED:\r\n                return {\r\n                    ...state,\r\n                    isLoaded: action.isLoaded\r\n            };\r\n            case GET_SLUG:\r\n                return {\r\n                    ...state,\r\n                    slug: action.slug\r\n            };\r\n            case SET_PAGENUMBER:\r\n                return {\r\n                    ...state,\r\n                    pageNumber: action.pageNumber\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setArticlesAC = (articles, articlesQuantity, isLoaded) => \r\n({ type: SET_ARTICLES_DATA, payload: {articles, articlesQuantity, isLoaded}});\r\nexport const setErrorAC = (error) => ({ type: SET_ERROR, error });\r\nexport const setCreatedAC = (isCreated) => ({ type: SET_ISCREATED, isCreated });\r\nexport const setDeletedSlug = (slug) => ({type: SET_DELETED_SLUG, slug})\r\nexport const setFavoriteAC = (slug) => ({ type: MAKE_FAVORITE, slug });\r\nexport const setUnfavoriteAC = (slug) => ({ type: MAKE_UNFAVORITE, slug });\r\nexport const setFavoriteCurrentAC = (slug) => ({ type: MAKE_FAVORITE_CURRENT_ARTICLE, slug });\r\nexport const setUnfavoriteCurrentAC = (slug) => ({ type: MAKE_UNFAVORITE_CURRENT_ARTICLE, slug });\r\nexport const setLoadingAC = (isLoaded) => ({ type: SET_ISLOADED, isLoaded });\r\nexport const setPageNumberAC = (pageNumber) => ({ type: SET_PAGENUMBER, pageNumber });\r\nexport const getCurrentArticleAC = \r\n    (body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt) => \r\n    ({type: GET_CURRENT_ARTICLE, payload: {body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt}})\r\nexport const getSlugAC = (slug) => ({type: GET_SLUG, slug})\r\n\r\n\r\n\r\n\r\nexport const getArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.get(`/api/articles/${slug}`)\r\n            let {body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt} = result.data.article;\r\n            dispatch(getCurrentArticleAC(body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt))\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport const deleteArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.delete(`/api/articles/${slug}`)\r\n            dispatch(setDeletedSlug(slug))\r\n\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const likeArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.post(`api/articles/${slug}/favorite`)\r\n            console.log(result)\r\n\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n}\r\n\r\nexport const unfavoriteArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.delete(`api/articles/${slug}/favorite`)\r\n            console.log(result)\r\n\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n}\r\n\r\nexport const createArticleThunk = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n           const result = await createArticle(data)\r\n            dispatch(setCreatedAC(true))\r\n        } catch (error) {\r\n            console.log(error.response)\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n}\r\n\r\nexport default articleReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport mainPageReducer from './mainPageReducer';\r\nimport articleReducer from './Article'\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    userData: mainPageReducer,\r\n    articlesData: articleReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","export const getJwt = () => {\r\n    return sessionStorage.getItem('cool-jwt');\r\n  };\r\n\r\n  export const getName = () => {\r\n    return sessionStorage.getItem('cool-name');\r\n  }\r\n\r\n  export const isAuth = (value = false) => {\r\n    return getJwt() !== null\r\n  };\r\n\r\n  export const removeJwt = () => {\r\n      return sessionStorage.removeItem('cool-jwt');\r\n  }\r\n\r\n\r\n  export const getSlug = () => {\r\n    return sessionStorage.getItem('slug');\r\n  }\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport { RegistrationThunk } from '../../Redux/mainPageReducer';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Input } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as Yup from 'yup';\r\nimport cls from './registration.module.scss';\r\nimport { isAuth, getName } from '../../helpers/token';\r\n\r\nconst RegistrationPage = props => {\r\n  const { status, error, RegistrationThunk } = props;\r\n  let history = useHistory(); \r\n  if(isAuth() && getName() !== null) {\r\n    history.push(\"/forum\");\r\n}\r\n  if( status < 300 && status > 199) {\r\n      history.push(\"/forum\");\r\n  }\r\n  return (\r\n    <div className={cls.wrapper}>\r\n      <Formik\r\n        initialValues={{ email: \"\", name: \"\", password: \"\", confirm_password: \"\" }}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n          setSubmitting(false);\r\n          RegistrationThunk({\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name\r\n          })\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          confirm_password: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords dont match'),\r\n        })}\r\n      >\r\n\r\n        {props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            dirty,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            handleReset\r\n          } = props;\r\n          return (\r\n            <form onSubmit={handleSubmit} className={cls.form}>\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Email\r\n              </label>\r\n              <Input\r\n                id=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                type=\"text\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {error !== null && error.email !== undefined && (\r\n                <div className={cls.errors}><p>{`Email ${String(error.email[0])}`}</p></div>\r\n              )}\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Name\r\n              </label>\r\n              <Input\r\n                id=\"name\"\r\n                placeholder=\"Enter your name\"\r\n                type=\"text\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {error !== null && error.username !== undefined && (\r\n                <div className={cls.errors}><p>{`Name ${String(error.username[0])}`}</p></div>\r\n              )}\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Password\r\n              </label>\r\n              <Input\r\n                id=\"password\"\r\n                placeholder=\"Enter your name\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {error !== null && error.password !== undefined && (\r\n                <div className={cls.errors}><p>{`Password ${String(error.password[0])}`}</p></div>\r\n              )}\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Repeat Password\r\n              </label>\r\n              <Input\r\n                id=\"confirm_password\"\r\n                placeholder=\"Enter your name\"\r\n                type=\"password\"\r\n                value={values.confirm_password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {errors.confirm_password && touched.confirm_password && (\r\n                <div className={cls.errors}><p>{errors.confirm_password}</p></div>\r\n              )}\r\n              <div className={cls.buttonsArea}>\r\n              <NavLink to='/forum/LoginPage'> Login page</NavLink>\r\n              <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"outline\"\r\n                onClick={handleReset}\r\n                disabled={!dirty || isSubmitting}\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n                </button>\r\n                </div>\r\n                </div>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.userData.error,\r\n  status: state.userData.status\r\n})\r\n\r\nconst RegistrationPageContainer = connect(mapStateToProps, { RegistrationThunk })(RegistrationPage)\r\n\r\nexport default RegistrationPageContainer;","import { connect } from 'react-redux';\r\nimport { thunk } from '../../Redux/mainPageReducer';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Input } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './login.module.scss';\r\nimport { isAuth, getName } from '../../helpers/token';\r\n\r\nconst LoginPage = (props) => {\r\n    const { status, error, thunk } = props;\r\n    let history = useHistory(); \r\n\r\n    if(isAuth() && getName() !== null) {\r\n        history.push(\"/forum/articles\");\r\n    }\r\n\r\n    if (status < 300 && status > 199) {\r\n        setTimeout(() => isAuth() && history.push(\"/forum/articles\"), 10);\r\n        return 'redirecting...'\r\n        }\r\n        const redirectToArticles = () => {\r\n            history.push(\"/forum/articles\");\r\n        }\r\n    return (\r\n        <div className={cls.wrapper}>\r\n           <button \r\n           onClick={redirectToArticles}\r\n           className={cls.articles}> <p> Atricles</p></button>\r\n            <Formik\r\n                initialValues={{ email: \"\", password: \"\" }}\r\n                onSubmit={async values => {\r\n                    await new Promise(resolve => setTimeout(resolve, 500));\r\n                    thunk({\r\n                        email: values.email,\r\n                        password: values.password\r\n                    })\r\n                }}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        dirty,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        handleReset\r\n                    } = props;\r\n                    return (\r\n                        <form onSubmit={handleSubmit} className={cls.form}>\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Email\r\n                             </label>\r\n                            <Input\r\n                                id=\"email\"\r\n                                placeholder=\"Enter your email\"\r\n                                type=\"text\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                password\r\n                                </label>\r\n                            <Input\r\n                                id=\"password\"\r\n                                placeholder=\"Enter your name\"\r\n                                type=\"password\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            {error !== null && error !== 'undefined' && (\r\n                                <div className={cls.errors}><p>{`email or password ${error[\"email or password\"]}`}</p></div>\r\n                            )}\r\n                            <div className={cls.buttonsArea}>\r\n                                <NavLink to='/forum/Registration'>Register</NavLink>\r\n                                <div>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"outline\"\r\n                                        onClick={handleReset}\r\n                                        disabled={!dirty || isSubmitting}\r\n                                    >\r\n                                        Reset\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"submit\" disabled={isSubmitting}\r\n                                        >\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    error: state.userData.error,\r\n    status: state.userData.status\r\n})\r\n\r\nconst LoginPageContainer = connect(mapStateToProps, { thunk })(LoginPage)\r\n\r\nexport default LoginPageContainer;","import { connect } from 'react-redux';\r\nimport { setStatusAC } from '../../Redux/mainPageReducer';\r\nimport React, { useState, useEffect } from 'react';\r\nimport cls from './main.module.scss';\r\nimport { removeJwt, getJwt, getName } from '../../helpers/token';\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\nimport instance from '../../API/API';\r\n\r\nconst MainPage = (props) => {\r\n  const [name, setName] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const key = getJwt()\r\n    const fetchData = async () => {\r\n      if (key !== null) {\r\n        try {\r\n          const result = await instance.get('/api/user')\r\n          setName(getName())\r\n        } catch (error) {\r\n          if (error) {\r\n            removeJwt('cool-jwt')\r\n            props.setStatusAC({data: 401});\r\n            props.history.push('/forum/LoginPage')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (name === null) {\r\n      fetchData();\r\n    }\r\n  }, [name, props ])\r\n\r\n  const deleteToken = () => {\r\n    removeJwt('cool-jwt')\r\n    props.history.push('/forum/LoginPage');\r\n    return props.setStatusAC({data: 401});\r\n  }\r\n\r\n  return (\r\n        <div className={cls.wrapper}>\r\n          <h3> {name} </h3>\r\n          <NavLink to='/forum/articles'>All Articles</NavLink>\r\n          <button\r\n            onClick={deleteToken}\r\n          > Выйти </button>\r\n        </div>\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n  {\r\n    username: state.userData.username,\r\n    token: state.userData.token,\r\n    status: state.userData.status\r\n  }\r\n)\r\n\r\nconst mainPageContainer = connect(mapStateToProps, { setStatusAC })(MainPage);\r\n\r\nexport default mainPageContainer;","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport instance from '../../API/API';\r\nimport cls from './all.module.scss';\r\nimport { Pagination } from 'antd';\r\nimport {\r\n    setArticlesAC,\r\n    setPageNumberAC,\r\n    setLoadingAC,\r\n    getArticle,\r\n    getSlugAC,\r\n    deleteArticle,\r\n    likeArticle,\r\n    unfavoriteArticle,\r\n    setFavoriteAC,\r\n    setUnfavoriteAC\r\n} from '../../Redux/Article';\r\nimport {setStatusAC} from '../../Redux/mainPageReducer';\r\nimport { getName, isAuth, removeJwt } from '../../helpers/token';\r\nimport { HeartOutlined, HeartFilled, CloseCircleOutlined, SettingFilled } from '@ant-design/icons';\r\nimport { parseISO, differenceInMinutes, getTime, differenceInHours, differenceInDays } from 'date-fns';\r\n\r\nconst ArticlesPage = (props) => {\r\n    const history = useHistory();\r\n    const username = getName();\r\n    const { articles, pageSize, pageNumber, setArticlesAC, setLoadingAC, setPageNumberAC, getSlugAC, setFavoriteAC, setUnfavoriteAC } = props\r\n    const date = Date.now()\r\n\r\n\r\n\r\n    const [pagesQuantity, seTpagesQuantity] = useState(1);\r\n    const [page, seTpage] = useState(props.pageNumber)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await instance.get(`/api/articles?offset=${pageNumber === 1 ? 0 : (pageNumber - 1) * (pageSize)}&limit=${pageSize}`)\r\n                setArticlesAC(result.data.articles, result.data.articlesCount, true, result.data.favorited)\r\n                seTpagesQuantity(Math.ceil(result.data.articlesCount / pageSize))\r\n            } catch (error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [pageNumber])\r\n\r\n    const onChange = page => {\r\n        setLoadingAC(false)\r\n        setPageNumberAC(page)\r\n        seTpage(page)\r\n    };\r\n    const getSlug = (slug) => {\r\n        history.push(\"/forum/article\");\r\n        sessionStorage.setItem('slug', slug);\r\n        getSlugAC(slug)\r\n    }\r\n    const deleteArticle = (slug) => {\r\n        props.deleteArticle(slug)\r\n    }\r\n    const likeArticle = (slug) => {\r\n        props.likeArticle(slug)\r\n        setFavoriteAC(slug)\r\n    }\r\n\r\n    const dislikeArticle = (slug) => {\r\n        props.unfavoriteArticle(slug)\r\n        setUnfavoriteAC(slug)\r\n    }\r\n    const createArtice = () => {\r\n        history.push(\"/forum/developmentPage\");\r\n    }\r\n    const redirectToLogin = () => {\r\n        history.push(\"/forum/LoginPage\");\r\n    }\r\n    const deleteToken = () => {\r\n        removeJwt('cool-jwt')\r\n        props.history.push('/forum/LoginPage');\r\n        return props.setStatusAC({data: 401});\r\n      }\r\n    return (\r\n        <div className={cls.wrapper}>\r\n            {!isAuth() && <div className={cls.registered}> <button\r\n                onClick={redirectToLogin}\r\n                className={cls.articles}> <h4>Login</h4></button> </div>}\r\n            {isAuth() && <div className={cls.registered}> <button\r\n                onClick={createArtice}> <h4>\r\n                    Create Article</h4>\r\n            </button>\r\n                <button\r\n                    onClick={deleteToken}\r\n                > <h4> Log Out</h4> </button> </div>\r\n            }\r\n            <div className={cls.pagination}>\r\n                {pagesQuantity !== 0 &&\r\n                    <Pagination\r\n                        defaultCurrent={1}\r\n                        current={page}\r\n                        onChange={onChange}\r\n                        showSizeChanger={false}\r\n                        pageSize={props.pageSize}\r\n                        total={props.articlesQuantity}\r\n                    />}\r\n            </div>\r\n            <ul className={cls.ul}>\r\n                {articles !== 'undefined' && props.isLoaded && articles.map((el, index) => {\r\n                    return <li key={index}\r\n                        onClick={() => getSlug(el.slug)}\r\n                    >\r\n                        <div className={cls.card}>\r\n                            <img src=\"https://cdn.jevelin.shufflehound.com/wp-content/uploads/sites/11/2016/11/14-768x720.jpg\" alt=\"mountain\" />\r\n                            <div className={cls.Card_leftside}>\r\n                                <div className={cls.authorInfo}>\r\n\r\n                                    <div className={cls.dateValue}>\r\n                                        <p>{`created by ${el.author.username}`}</p>\r\n                                        <div className={cls.reversedDate}>\r\n                                            {differenceInMinutes(date, getTime(parseISO(`${el.createdAt}`))) >= 60\r\n                                                ? <h4>{`${differenceInMinutes(date, getTime(parseISO(`${el.createdAt}`)))\r\n                                                    - (differenceInHours(date, getTime(parseISO(`${el.createdAt}`))) * 60)} min`}</h4>\r\n                                                : differenceInMinutes(date, getTime(parseISO(`${el.createdAt}`))) < 1\r\n                                                    ? <h4>less than minute</h4>\r\n                                                    : <h4>{`${differenceInMinutes(date, getTime(parseISO(`${el.createdAt}`)))} min`}</h4>\r\n                                            }\r\n\r\n                                            {differenceInHours(date, getTime(parseISO(`${el.createdAt}`))) >= 24 &&\r\n                                                differenceInHours(date, getTime(parseISO(`${el.createdAt}`)))\r\n                                                - (differenceInDays(date, getTime(parseISO(`${el.createdAt}`))) * 24) > 0\r\n                                                ?\r\n                                                <h4>{`${differenceInHours(date, getTime(parseISO(`${el.createdAt}`)))\r\n                                                    - (differenceInDays(date, getTime(parseISO(`${el.createdAt}`))) * 24)} hours`}</h4>\r\n                                                : ''}\r\n                                            {differenceInHours(date, getTime(parseISO(`${el.createdAt}`))) < 24\r\n                                                && differenceInHours(date, getTime(parseISO(`${el.createdAt}`))) > 0\r\n                                                ? <h4> {`${differenceInHours(date, getTime(parseISO(`${el.createdAt}`)))} hours`} </h4>\r\n                                                : ''}\r\n\r\n                                            {differenceInDays(date, getTime(parseISO(`${el.createdAt}`))) > 0 ?\r\n                                                <h4>{`${differenceInDays(date, getTime(parseISO(`${el.createdAt}`)))} days `}</h4>\r\n                                                : ''\r\n                                            }\r\n                                        </div>\r\n                                        <h4>ago</h4>\r\n                                    </div>\r\n                                    <h2>{el.title}</h2>\r\n                                    {el.tagList.length > 0 ?\r\n                                        <h4>{`tags: ${el.tagList.join(', ')}`}</h4>\r\n                                        : <h4>tags: -</h4>\r\n                                    }\r\n                                </div>\r\n                                <div className={cls.cardFooter}>\r\n                                    {username === el.author.username &&\r\n                                        <button\r\n                                        className={cls.change}\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                getSlug(el.slug)\r\n                                                history.push(\"/forum/editPage\");\r\n                                            }}\r\n                                        >\r\n                                            <h4> Change Article <SettingFilled /></h4>\r\n                                        </button>}\r\n                                    {username === el.author.username &&\r\n                                        <button\r\n                                        className={cls.delete}\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                deleteArticle(el.slug)\r\n                                            }}\r\n                                        >\r\n                                            <h4> Delete Article <CloseCircleOutlined /></h4>\r\n                                        </button>}\r\n                                    {isAuth() && <div>\r\n                                        {el.favorited ? <button\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                dislikeArticle(el.slug)\r\n                                            }}\r\n                                        ><h5><HeartFilled /></h5><h5>{el.favoritesCount}</h5></button>\r\n                                            : <button\r\n                                                onClick={(e) => {\r\n                                                    e.stopPropagation();\r\n                                                    likeArticle(el.slug)\r\n                                                }}\r\n                                            ><h5><HeartOutlined /></h5><h5>{el.favoritesCount}</h5></button>}</div>}\r\n                                    {!isAuth() && <h5>likes: {el.favoritesCount}</h5>}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n            <div>\r\n                <p>{!props.isLoaded && '...loading'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    articles: state.articlesData.articles,\r\n    pageSize: state.articlesData.pageSize,\r\n    pageNumber: state.articlesData.pageNumber,\r\n    isLoaded: state.articlesData.isLoaded,\r\n    articlesQuantity: state.articlesData.articlesQuantity,\r\n    favoriteArticles: state.articlesData.favoriteArticles\r\n})\r\n\r\nconst AllArticlesContainer = connect(mapStateToProps,\r\n    {\r\n        setArticlesAC,\r\n        setPageNumberAC,\r\n        setLoadingAC,\r\n        getArticle,\r\n        getSlugAC,\r\n        deleteArticle,\r\n        unfavoriteArticle,\r\n        likeArticle,\r\n        setFavoriteAC,\r\n        setUnfavoriteAC,\r\n        setStatusAC\r\n    })(ArticlesPage)\r\n\r\nexport default AllArticlesContainer;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuth } from \"./token\";\r\n\r\nexport const ProtectedRoute = ({\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (isAuth()) {\r\n            return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/forum/LoginPage\",\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { thunk } from '../../Redux/mainPageReducer';\r\nimport { HeartOutlined, HeartFilled } from '@ant-design/icons';\r\nimport React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './current.module.scss';\r\nimport instance from '../../API/API';\r\nimport {\r\n    unfavoriteArticle,\r\n    likeArticle,\r\n    setFavoriteCurrentAC,\r\n    setUnfavoriteCurrentAC,\r\n    getCurrentArticleAC,\r\n} from '../../Redux/Article';\r\nimport { getSlug, isAuth } from '../../helpers/token';\r\n\r\nimport { parseISO, differenceInMinutes, getTime, differenceInHours, differenceInDays } from 'date-fns';\r\n\r\n\r\n\r\nconst SingleArticlePage = (props) => {\r\n    const { setFavoriteCurrentAC, setUnfavoriteCurrentAC, likeArticle, unfavoriteArticle, article } = props;\r\n    const { body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt } = article;\r\n    const date = Date.now();\r\n    let history = useHistory();\r\n    const sessionSlug = sessionStorage.getItem('slug')\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await instance.get(`/api/articles/${sessionSlug}`)\r\n                const { body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt } = result.data.article\r\n                props.getCurrentArticleAC(body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt)\r\n            } catch (error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n        if (sessionSlug !== null) {\r\n            fetchData();\r\n        }\r\n    }, [sessionSlug, body])\r\n\r\n    const addLikeToArticle = (slug) => {\r\n        likeArticle(slug)\r\n        setFavoriteCurrentAC(slug)\r\n    }\r\n\r\n    const dislikeArticle = (slug) => {\r\n        unfavoriteArticle(slug)\r\n        setUnfavoriteCurrentAC(slug)\r\n    }\r\n    const redirectToArticles = () => {\r\n        history.push(\"/forum/articles\");\r\n    }\r\n\r\n    return (article.hasOwnProperty('body') &&\r\n        <div className={cls.wrapper}>\r\n             <button \r\n             className={cls.redirect}\r\n            onClick={redirectToArticles}\r\n            type=\"primary\" key=\"console\">Atricles</button>\r\n            <div className={cls.body}>\r\n                <img src='https://cdn.jevelin.shufflehound.com/wp-content/uploads/sites/28/2019/09/101_0001_alexandru-acea-bbokzTQjB9o-unsplash-1024x777.jpg' alt=\"pic\" />\r\n                <div className={cls.dateValue}>\r\n                <p>{`created by ${author.username}`}</p>\r\n                    <div className={cls.reversedDate}>\r\n                        {differenceInMinutes(date, getTime(parseISO(`${createdAt}`))) >= 60\r\n                            ? <h4>{`${differenceInMinutes(date, getTime(parseISO(`${createdAt}`)))\r\n                                - (differenceInHours(date, getTime(parseISO(`${createdAt}`))) * 60)} min`}</h4>\r\n                            : differenceInMinutes(date, getTime(parseISO(`${createdAt}`))) < 1\r\n                                ? <h4>less than minute</h4>\r\n                                : <h4>{`${differenceInMinutes(date, getTime(parseISO(`${createdAt}`)))} min`}</h4>\r\n                        }\r\n\r\n                        {differenceInHours(date, getTime(parseISO(`${createdAt}`))) >= 24 &&\r\n                            differenceInHours(date, getTime(parseISO(`${createdAt}`)))\r\n                            - (differenceInDays(date, getTime(parseISO(`${createdAt}`))) * 24) > 0\r\n                            ?\r\n                            <h4>{`${differenceInHours(date, getTime(parseISO(`${createdAt}`)))\r\n                                - (differenceInDays(date, getTime(parseISO(`${createdAt}`))) * 24)} hours`}</h4>\r\n                            : ''}\r\n                        {differenceInHours(date, getTime(parseISO(`${createdAt}`))) < 24\r\n                            && differenceInHours(date, getTime(parseISO(`${createdAt}`))) > 0\r\n                            ? <h4> {`${differenceInHours(date, getTime(parseISO(`${createdAt}`)))} hours`} </h4>\r\n                            : ''}\r\n\r\n                        {differenceInDays(date, getTime(parseISO(`${createdAt}`))) > 0 ?\r\n                            <h4>{`${differenceInDays(date, getTime(parseISO(`${createdAt}`)))} days `}</h4>\r\n                            : ''\r\n                        }\r\n                    </div>\r\n                    <h4>ago</h4>\r\n                </div>\r\n                <h2>{title}</h2>\r\n                <h5>{`description: ${description}`}</h5>\r\n                <div className={cls.article_body}>\r\n                <p>{body}</p>\r\n                </div>\r\n                <ul>\r\n                    <span>{tagList.length > 0 ? 'tags:' : 'tags: -' }</span>\r\n                    {tagList.map((el, index) => {\r\n                        return <li key={index}><p>{el}</p></li>\r\n                    })}\r\n                </ul>\r\n               {isAuth() && <div>\r\n                {article.favorited ? <button\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        dislikeArticle(getSlug())\r\n                    }}\r\n                ><h5><HeartFilled /></h5><h5>{article.favoritesCount}</h5></button>\r\n                    : <button\r\n                    disabled={!isAuth()}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            addLikeToArticle(getSlug())\r\n                        }}\r\n                    ><h5><HeartOutlined /></h5><h5>{article.favoritesCount}</h5></button>}</div>}\r\n                 {!isAuth() && <h5>{`likes: ${article.favoritesCount}`}</h5> }   \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    article: state.articlesData.currentArticle,\r\n})\r\n\r\nconst SingleArticleContainer = connect(mapStateToProps, {\r\n    unfavoriteArticle,\r\n    likeArticle,\r\n    setFavoriteCurrentAC,\r\n    setUnfavoriteCurrentAC,\r\n    getCurrentArticleAC\r\n})(SingleArticlePage)\r\n\r\nexport default SingleArticleContainer;","import { connect } from 'react-redux';\r\nimport { createArticleThunk, setCreatedAC, setErrorAC } from '../../Redux/Article';\r\nimport React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Input, Result, notification  } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './add.module.scss';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nconst DevelopmentPage = (props) => {\r\n    const { error, createArticleThunk, isCreated, setCreatedAC, setErrorAC } = props;\r\n    console.log(isCreated)\r\n    const [tagsArray, setTagsArray] = useState([]);\r\n    let tagInput = '';\r\n    let history = useHistory();\r\n\r\n    const openNotification = () => {\r\n        notification.open({\r\n          message: 'Equal tags can not be added in one tags list',\r\n          description:\r\n            'Change or delete this tag and close this window',\r\n          onClick: () => {\r\n            console.log('Notification Clicked!');\r\n          },\r\n        });\r\n      };\r\n\r\n    const removeTag = (i) => {\r\n        const arr = tagsArray.splice(i, 1)\r\n        setTagsArray(tagsArray.filter(el => el !== arr[0]));\r\n    }\r\n\r\n    const inputKeyDown = (e) => {\r\n        const val = e.target.value;\r\n        if (e.key === 'Shift' && val) {\r\n            if (tagsArray.find(tag => tag.toLowerCase() === val.toLowerCase())) {\r\n                openNotification()\r\n                return;\r\n            }\r\n            setTagsArray(tagsArray.concat(val));\r\n            tagInput.value = null;\r\n        } else if (e.key === 'Backspace' && !val) {\r\n            removeTag(tagsArray.length - 1);\r\n        }\r\n    }\r\n\r\n    const redirectToArticles = () => {\r\n        history.push(\"/forum/articles\");\r\n        setCreatedAC(false);\r\n        setErrorAC('')\r\n    }\r\n    return (\r\n        <div className={cls.wrapper}>\r\n            {isCreated && \r\n                        <Result\r\n                        status=\"success\"\r\n                        title=\"Article created successfully\"\r\n                        extra={[\r\n                            <button \r\n                            onClick={redirectToArticles}\r\n                            type=\"primary\" key=\"console\">\r\n                                Go to Atricles page </button>\r\n                        ]}\r\n                    />\r\n            }\r\n\r\n            {!isCreated && \r\n                    <Formik\r\n                        initialValues={{ title: \"\", description: \"\", body: \"\" }}\r\n                        onSubmit={async values => {\r\n                            await new Promise(resolve => setTimeout(resolve, 500));\r\n                            createArticleThunk({\r\n                                article: {\r\n                                    title: values.title,\r\n                                    description: values.description,\r\n                                    body: values.body,\r\n                                    tagList: tagsArray\r\n                                }\r\n                            })\r\n                        }}\r\n                    >\r\n                        {props => {\r\n                            const {\r\n                                values,\r\n                                dirty,\r\n                                isSubmitting,\r\n                                handleChange,\r\n                                handleBlur,\r\n                                handleSubmit,\r\n                                handleReset\r\n                            } = props;\r\n                            return (\r\n                                <div>\r\n                                                                    <button\r\n                                onClick={redirectToArticles}\r\n                                className={cls.articles}> <p> Atricles</p></button>\r\n                                \r\n                                <form onSubmit={handleSubmit} className={cls.form}>\r\n                                    <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                        Title\r\n                                     </label>\r\n                                    <Input\r\n                                        id=\"title\"\r\n                                        placeholder=\"Enter title of article\"\r\n                                        type=\"text\"\r\n                                        value={values.title}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={cls.input}\r\n                                    />\r\n                                    {error !== '' && error.hasOwnProperty('title') && (\r\n                                        <div className={cls.errors}><p>{`title ${error.title[0]}`}</p></div>\r\n                                    )}\r\n                                    <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                        Description\r\n                                        </label>\r\n                                    <Input\r\n                                        id=\"description\"\r\n                                        placeholder=\"Enter description of article\"\r\n                                        type=\"text\"\r\n                                        value={values.description}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={cls.input}\r\n                                    />\r\n                                    {error !== '' && error.hasOwnProperty('description') && (\r\n                                        <div className={cls.errors}><p>{`description ${String(error.description[0])}`}</p></div>\r\n                                    )}\r\n                                    <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                        Body\r\n                                        </label>\r\n                                    <Input.TextArea\r\n                                        id=\"body\"\r\n                                        placeholder=\"Enter body of article\"\r\n                                        type=\"text\"\r\n                                        value={values.body}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={cls.input}\r\n                                    />\r\n                                    {error !== '' && error.hasOwnProperty('body') && (\r\n                                        <div className={cls.errors}><p>{`body ${error.body[0]}`}</p></div>\r\n                                    )}\r\n                                    <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                        Tags\r\n                                        </label>\r\n                                    <div className={cls.tagsArea}>\r\n                                        <ul className={cls.tagsUl}>\r\n                                            {tagsArray.map((tag, i) => (\r\n                                                <li key={tag}>\r\n                                                    <h4>\r\n                                                        {tag}\r\n                                                        <button type=\"button\" onClick={() => { removeTag(i) }}><CloseCircleOutlined /></button>\r\n                                                    </h4>\r\n                                                </li>\r\n                                            ))}\r\n                                            <li className={cls.tagsInput}>\r\n                                                <input type=\"text\" placeholder=\"press shift for adding tag\" onKeyDown={inputKeyDown} ref={c => { tagInput = c; }} />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className={cls.buttonsArea}>\r\n                                        <div>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className=\"outline\"\r\n                                                onClick={handleReset}\r\n                                                disabled={!dirty || isSubmitting}\r\n                                            >\r\n                                                Reset\r\n                                            </button>\r\n                                            <button\r\n                                                type=\"submit\" disabled={isSubmitting}\r\n                                            >\r\n                                                Submit\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                </div>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    error: state.articlesData.error,\r\n    isCreated: state.articlesData.isCreated,\r\n    status: state.userData.status\r\n})\r\n\r\nconst DevelopmentPageContainer = connect(mapStateToProps, { createArticleThunk, setCreatedAC, setErrorAC })(DevelopmentPage)\r\n\r\nexport default DevelopmentPageContainer;","import { connect } from 'react-redux';\r\nimport { getCurrentArticleAC,setCreatedAC } from '../../Redux/Article';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Input, Result, notification } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './edit.module.scss';\r\nimport instance, { updateArticle } from '../../API/API';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nconst EditPage = (props) => {\r\n    const { error, thunk, currentArticle, slug, isCreated } = props;\r\n    const { body, description, title, tagList } = currentArticle;\r\n    const sessionSlug = sessionStorage.getItem('slug');\r\n    const [tagsArray, setTagsArray] = useState([]);\r\n    console.log(error)\r\n    let tagInput = '';\r\n\r\n    const removeTag = (i) => {\r\n        const arr = tagsArray.splice(i, 1)\r\n        setTagsArray(tagsArray.filter(el => el !== arr[0]));\r\n    }\r\n    const redirectToArticles = () => {\r\n        history.push(\"/forum/articles\");\r\n        props.setCreatedAC(false)\r\n    }\r\n\r\n    const openNotification = () => {\r\n        notification.open({\r\n          message: 'Equal tags can not be added in one tags list',\r\n          description:\r\n            'Change or delete this tag and close this window',\r\n          onClick: () => {\r\n            console.log('Notification Clicked!');\r\n          },\r\n        });\r\n      };\r\n\r\n    const inputKeyDown = (e) => {\r\n        const val = e.target.value;\r\n        if (e.key === 'Shift' && val) {\r\n            if (tagsArray.find(tag => tag.toLowerCase() === val.toLowerCase())) {\r\n                openNotification()\r\n                return;\r\n            }\r\n            setTagsArray(tagsArray.concat(val));\r\n            tagInput.value = null;\r\n        } else if (e.key === 'Backspace' && !val) {\r\n            removeTag(tagsArray.length - 1);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await instance.get(`/api/articles/${sessionSlug}`)\r\n                setTagsArray(result.data.article.tagList)\r\n                const { body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt } = result.data.article\r\n                props.getCurrentArticleAC(body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt)\r\n            } catch (error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n        if (sessionSlug !== null) {\r\n            fetchData();\r\n        }\r\n    }, [slug, body])\r\n\r\n    let history = useHistory();\r\n\r\n    return (currentArticle.hasOwnProperty('body') &&\r\n        <div className={cls.wrapper}>\r\n             {isCreated && \r\n                        <Result\r\n                        status=\"success\"\r\n                        title=\"Article updated successfully\"\r\n                        extra={[\r\n                            <button \r\n                            onClick={redirectToArticles}\r\n                            type=\"primary\" key=\"console\">\r\n                                Go to Atricles page </button>\r\n                        ]}\r\n                    />\r\n            }\r\n           {!isCreated && \r\n            <Formik\r\n            initialValues={{\r\n                title: title,\r\n                description: description,\r\n                body: body\r\n            }}\r\n            onSubmit={async values => {\r\n                await new Promise(resolve => setTimeout(resolve, 500));\r\n                updateArticle({\r\n                    article: {\r\n                        title: values.title,\r\n                        description: values.description,\r\n                        body: values.body,\r\n                        tagList: tagsArray\r\n                    }\r\n                })\r\n                props.setCreatedAC(true)\r\n            }}\r\n        >\r\n            {props => {\r\n                const {\r\n                    values,\r\n                    dirty,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    handleReset\r\n                } = props;\r\n                return (\r\n                    <form onSubmit={handleSubmit} className={cls.form}>\r\n                        <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                            Title\r\n                     </label>\r\n                        <Input\r\n                            id=\"title\"\r\n                            placeholder=\"title\"\r\n                            type=\"text\"\r\n                            value={values.title}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={cls.input}\r\n                        />\r\n                        {error !== '' && error.hasOwnProperty('title') && (\r\n                            <div className={cls.errors}><p>{`title ${error.title[0]}`}</p></div>\r\n                        )}\r\n                        <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                            Description\r\n                        </label>\r\n                        <Input\r\n                            id=\"description\"\r\n                            placeholder=\"description\"\r\n                            type=\"text\"\r\n                            value={values.description}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={cls.input}\r\n                        />\r\n                        {error !== '' && error.hasOwnProperty('description') && (\r\n                            <div className={cls.errors}><p>{`description ${String(error.description[0])}`}</p></div>\r\n                        )}\r\n                        <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                            Body\r\n                        </label>\r\n                        <Input.TextArea\r\n                            id=\"body\"\r\n                            placeholder=\"body\"\r\n                            type=\"text\"\r\n                            value={values.body}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={cls.input}\r\n                        />\r\n                        {error !== '' && error.hasOwnProperty('body') && (\r\n                            <div className={cls.errors}><p>{`body ${error.body[0]}`}</p></div>\r\n                        )}\r\n                        <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                            Tags\r\n                        </label>\r\n                        <div className={cls.tagsArea}>\r\n                            <ul className={cls.tagsUl}>\r\n                                {tagsArray.map((tag, i) => (\r\n                                    <li key={tag}>\r\n                                        <h4>\r\n                                            {tag}\r\n                                            <button type=\"button\" onClick={() => { removeTag(i) }}><CloseCircleOutlined /></button>\r\n                                        </h4>\r\n                                    </li>\r\n                                ))}\r\n                                <li className={cls.tagsInput}>\r\n                                    <input type=\"text\" placeholder=\"press shift for adding tag\" onKeyDown={inputKeyDown} ref={c => { tagInput = c; }} />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className={cls.buttonsArea}>\r\n                            <NavLink to='/forum/articles'>All Articles</NavLink>\r\n                            <div>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"outline\"\r\n                                    onClick={handleReset}\r\n                                    disabled={!dirty || isSubmitting}\r\n                                >\r\n                                    Reset\r\n                            </button>\r\n                                <button\r\n                                    type=\"submit\" disabled={isSubmitting}\r\n                                >\r\n                                    Submit\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                );\r\n            }}\r\n        </Formik>\r\n           }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    error: state.articlesData.error,\r\n    currentArticle: state.articlesData.currentArticle,\r\n    isCreated: state.articlesData.isCreated,\r\n    slug: state.articlesData.slug\r\n})\r\n\r\nconst EditPageContainer = connect(mapStateToProps, { getCurrentArticleAC, setCreatedAC })(EditPage)\r\n\r\nexport default EditPageContainer;","import React from 'react';\r\nimport './App.module.scss';\r\nimport RegistrationPageContainer from './Components/RegistrationPage/RegistrationPageContainer';\r\nimport LoginPageContainer from './Components/LoginPage/loginPageContainer';\r\nimport mainPageContainer from './Components/MainPage/MainPageContainer'\r\nimport AllArticlesContainer from './Components/ArticlesPAge/AllArticles'\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport { ProtectedRoute } from './helpers/protectedRoute';\r\nimport SingleArticleContainer from './Components/CurrentArticlePage/CurrentArticle';\r\nimport DevelopmentPageContainer from './Components/AddNewArticlePage/AddArticle';\r\nimport EditPageContainer from './Components/EditingPage/EditingPage';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/forum/LoginPage' component={LoginPageContainer} />\r\n      <Route path='/forum/articles' component={AllArticlesContainer} />\r\n      <Route path='/forum/Registration' component={RegistrationPageContainer}/>\r\n      <Route path='/forum/developmentPage' component={DevelopmentPageContainer}/>\r\n      <Route path='/forum/article' component={SingleArticleContainer}/>\r\n      <Route path='/forum/editPage' component={EditPageContainer}/>\r\n      <ProtectedRoute exact path='/forum/' component={mainPageContainer} />\r\n    </Switch>\r\n  ) \r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './Redux/redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"edit_wrapper__3ImOb\",\"tagsArea\":\"edit_tagsArea__3dEnt\",\"tagsUl\":\"edit_tagsUl__3WbYn\",\"tagsInput\":\"edit_tagsInput__1L0aH\",\"form\":\"edit_form__qHkBW\",\"input\":\"edit_input__1WXhm\",\"buttonsArea\":\"edit_buttonsArea__3l9pf\",\"errors\":\"edit_errors__KsEZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"registration_wrapper__3w-sm\",\"form\":\"registration_form__1d1UH\",\"input\":\"registration_input__3F6qd\",\"buttonsArea\":\"registration_buttonsArea__18T8o\",\"errors\":\"registration_errors__1_bjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__1DHUi\",\"articles\":\"login_articles__kOmqn\",\"form\":\"login_form__2l9yv\",\"input\":\"login_input__2o3z6\",\"buttonsArea\":\"login_buttonsArea__1JAdq\",\"errors\":\"login_errors__H-sF-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"current_wrapper__j5zsz\",\"redirect\":\"current_redirect__ftFKT\",\"dateValue\":\"current_dateValue__qcVvq\",\"reversedDate\":\"current_reversedDate__1VAZB\",\"body\":\"current_body__3dhTr\",\"article_body\":\"current_article_body__2yqGp\"};"],"sourceRoot":""}
{"version":3,"sources":["Components/MainPage/main.module.scss","App.module.scss","API/API.js","Redux/mainPageReducer.js","Redux/Article.js","Redux/redux.js","helpers/token.js","Components/RegistrationPage/RegistrationPageContainer.jsx","Components/LoginPage/loginPageContainer.jsx","Components/MainPage/MainPageContainer.jsx","Components/ArticlesPAge/AllArticles.jsx","helpers/protectedRoute.jsx","Components/CurrentArticlePage/CurrentArticle.jsx","Components/AddNewArticlePage/AddArticle.jsx","Components/EditingPage/EditingPage.jsx","App.jsx","serviceWorker.js","index.jsx","Components/AddNewArticlePage/add.module.scss","Components/EditingPage/edit.module.scss","Components/RegistrationPage/registration.module.scss","Components/ArticlesPAge/all.module.scss","Components/LoginPage/login.module.scss","Components/CurrentArticlePage/current.module.scss"],"names":["module","exports","instance","axios","baseURL","interceptors","request","use","config","token","sessionStorage","getItem","headers","Authorization","initialState","username","value","status","error","setUserDataAC","name","type","payload","setErrorAC","mainReducer","state","action","articles","isLoaded","pageNumber","pageSize","articlesQuantity","currentArticle","slug","setDeletedSlug","getCurrentArticleAC","body","author","createdAt","description","favoritesCount","favorited","title","tagList","updatedAt","likeArticle","dispatch","a","post","result","console","log","response","data","errors","unfavoriteArticle","delete","articleReducer","map","el","filter","reducers","combineReducers","userData","mainPageReducer","articlesData","store","createStore","applyMiddleware","thunkMiddleware","getJwt","getName","isAuth","removeJwt","removeItem","getSlug","RegistrationPageContainer","connect","RegistrationThunk","registerData","user","email","password","setItem","props","history","useHistory","push","className","cls","wrapper","initialValues","confirm_password","onSubmit","values","setSubmitting","Promise","resolve","setTimeout","validationSchema","Yup","shape","oneOf","touched","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","form","htmlFor","style","display","id","placeholder","onChange","onBlur","input","undefined","String","buttonsArea","to","onClick","disabled","LoginPageContainer","thunk","loginData","mainPageContainer","setStatusAC","useState","setName","useEffect","key","get","fetchData","AllArticlesContainer","favoriteArticles","setArticlesAC","setPageNumberAC","setLoadingAC","getArticle","article","getSlugAC","deleteArticle","setFavoriteAC","setUnfavoriteAC","date","Date","now","pagesQuantity","seTpagesQuantity","page","seTpage","articlesCount","Math","ceil","pagination","defaultCurrent","current","showSizeChanger","total","ul","index","card","src","alt","Card_leftside","authorInfo","dateValue","reversedDate","differenceInMinutes","getTime","parseISO","differenceInHours","differenceInDays","length","join","cardFooter","e","stopPropagation","HeartFilled","HeartOutlined","ProtectedRoute","Component","component","rest","render","pathname","from","location","SingleArticleContainer","setFavoriteCurrentAC","setUnfavoriteCurrentAC","sessionSlug","hasOwnProperty","DevelopmentPageContainer","createArticleThunk","articleData","tagsArray","setTagsArray","tagInput","removeTag","i","arr","splice","inputKeyDown","val","target","find","tag","toLowerCase","concat","TextArea","tagsArea","tagsUl","CloseCircleOutlined","tagsInput","onKeyDown","ref","c","EditPageContainer","updatedData","put","App","path","exact","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2e0e7e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main_wrapper__36HIk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__3Aexq\",\"ul\":\"App_ul__zXSjm\",\"ticketsArea\":\"App_ticketsArea__lzTW3\",\"wrapper\":\"App_wrapper__2HLsp\",\"img\":\"App_img__3MMz6\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://conduit.productionready.io',\r\n});\r\n\r\ninstance.interceptors.request.use(config => {\r\n  const token = sessionStorage.getItem('cool-jwt');\r\n  if (token) {\r\n    config.headers.Authorization = `Token ${token}`;\r\n  }\r\n  return config\r\n  })\r\n\r\nexport default instance;\r\n\r\nexport const register = registerData =>\r\ninstance.post('/api/users', registerData)\r\n\r\nexport const updateArticle = updatedData =>\r\ninstance.put(`/api/articles/${sessionStorage.getItem('slug')}`, updatedData)\r\n\r\nexport const login = (loginData) => \r\n  instance.post('/api/users/login', loginData)\r\n\r\nexport const createArticle = (articleData) => \r\n  instance.post('/api/articles' ,articleData)\r\n","import { login, register } from '../API/API'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_ERROR = 'SET_ERROR';\r\n\r\nlet initialState = {\r\n    username: '',\r\n    token: '',\r\n    value: null,\r\n    status: null,\r\n    error: null\r\n}\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SET_STATUS:\r\n            \r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setStatusAC = (status) => ({ type: SET_STATUS, status });\r\nexport const setUserDataAC = (token, name, status) => ({ type: SET_USER_DATA, payload: {name,token,status}});\r\nexport const setErrorAC = (error) => ({ type: SET_ERROR, error });\r\n\r\nexport const thunk = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n         const response = await login({\r\n                user: {\r\n                    email: data.email,\r\n                    password: data.password,\r\n                }\r\n            })\r\n            let {token,username} = response.data.user;\r\n            let {status} = response.request;\r\n            dispatch(setUserDataAC(token, username, status));\r\n            sessionStorage.setItem('cool-jwt', response.data.user.token);\r\n            sessionStorage.setItem('cool-name', response.data.user.username);\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const RegistrationThunk = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n        const response = await register({\r\n                user: {\r\n                    email: data.email,\r\n                    password: data.password,\r\n                    username: data.name,\r\n                }\r\n            })\r\n            let {token,username} = response.data.user;\r\n            let {status} = response.request;\r\n            dispatch(setUserDataAC(token, username, status))\r\n            sessionStorage.setItem('cool-jwt', response.data.user.token);\r\n            sessionStorage.setItem('cool-name', response.data.user.username);\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default mainReducer;","import instance, {createArticle} from '../API/API'\r\n\r\nconst SET_ARTICLES_DATA = 'SET_ARTICLES_DATA';\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst SET_PAGENUMBER = 'SET_PAGENUMBER';\r\nconst SET_ISLOADED = 'SET_ISLOADED';\r\nconst GET_CURRENT_ARTICLE = 'GET_CURRENT_ARTICLE';\r\nconst GET_SLUG = 'GET_SLUG';\r\nconst MAKE_FAVORITE = 'MAKE_FAVORITE';\r\nconst MAKE_UNFAVORITE = 'MAKE_UNFAVORITE';\r\nconst SET_DELETED_SLUG = 'SET_DELETED_SLUG';\r\nconst MAKE_FAVORITE_CURRENT_ARTICLE = 'MAKE_FAVORITE_CURRENT_ARTICLE';\r\nconst MAKE_UNFAVORITE_CURRENT_ARTICLE = 'MAKE_UNFAVORITE_CURRENT_ARTICLE';\r\n\r\nlet initialState = {\r\n    articles: [],\r\n    isLoaded: false,\r\n    pageNumber: 1,\r\n    pageSize: 10,\r\n    error: '',\r\n    articlesQuantity: 0,\r\n    currentArticle: {},\r\n    slug: '',\r\n}\r\n\r\nconst articleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ARTICLES_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n            case SET_ERROR:\r\n                return {\r\n                    ...state,\r\n                    error: action.error\r\n            };\r\n            case MAKE_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    articles: state.articles.map(el => {\r\n                        if (el.slug === action.slug)\r\n                       { return { ...el,favorited: true,\r\n                        favoritesCount: el.favoritesCount + 1,\r\n                        }}\r\n                        return el\r\n                    })\r\n            };\r\n            case MAKE_UNFAVORITE:\r\n                return {\r\n                    ...state,\r\n                    articles: state.articles.map(el => {\r\n                        if (el.slug === action.slug)\r\n                        {\r\n                        return { ...el,favorited: false,\r\n                            favoritesCount: el.favoritesCount - 1,\r\n                        }\r\n                    }\r\n                    return el\r\n                    })\r\n            };\r\n            case MAKE_FAVORITE_CURRENT_ARTICLE:\r\n                return {\r\n                    ...state,\r\n                    currentArticle: { ...state.currentArticle,favorited: true,\r\n                        favoritesCount: state.currentArticle.favoritesCount + 1,\r\n                    }\r\n            };\r\n            case MAKE_UNFAVORITE_CURRENT_ARTICLE:\r\n                return {\r\n                    ...state,\r\n                    currentArticle: { ...state.currentArticle,favorited: false,\r\n                            favoritesCount: state.currentArticle.favoritesCount - 1,\r\n                        }\r\n            };\r\n            case GET_CURRENT_ARTICLE:\r\n                return {\r\n                    ...state,\r\n                    currentArticle: action.payload,\r\n            };\r\n            case SET_DELETED_SLUG:\r\n                return {\r\n                    ...state,\r\n                    articles: state.articles.filter(el => el.slug !== action.slug)\r\n                }\r\n            case SET_ISLOADED:\r\n                return {\r\n                    ...state,\r\n                    isLoaded: action.isLoaded\r\n            };\r\n            case GET_SLUG:\r\n                return {\r\n                    ...state,\r\n                    slug: action.slug\r\n            };\r\n            case SET_PAGENUMBER:\r\n                return {\r\n                    ...state,\r\n                    pageNumber: action.pageNumber\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setArticlesAC = (articles, articlesQuantity, isLoaded) => \r\n({ type: SET_ARTICLES_DATA, payload: {articles, articlesQuantity, isLoaded}});\r\nexport const setErrorAC = (error) => ({ type: SET_ERROR, error });\r\nexport const setDeletedSlug = (slug) => ({type: SET_DELETED_SLUG, slug})\r\nexport const setFavoriteAC = (slug) => ({ type: MAKE_FAVORITE, slug });\r\nexport const setUnfavoriteAC = (slug) => ({ type: MAKE_UNFAVORITE, slug });\r\nexport const setFavoriteCurrentAC = (slug) => ({ type: MAKE_FAVORITE_CURRENT_ARTICLE, slug });\r\nexport const setUnfavoriteCurrentAC = (slug) => ({ type: MAKE_UNFAVORITE_CURRENT_ARTICLE, slug });\r\nexport const setLoadingAC = (isLoaded) => ({ type: SET_ISLOADED, isLoaded });\r\nexport const setPageNumberAC = (pageNumber) => ({ type: SET_PAGENUMBER, pageNumber });\r\nexport const getCurrentArticleAC = \r\n    (body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt) => \r\n    ({type: GET_CURRENT_ARTICLE, payload: {body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt}})\r\nexport const getSlugAC = (slug) => ({type: GET_SLUG, slug})\r\n\r\n\r\n\r\n\r\nexport const getArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.get(`/api/articles/${slug}`)\r\n            let {body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt} = result.data.article;\r\n            dispatch(getCurrentArticleAC(body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt))\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport const deleteArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.delete(`/api/articles/${slug}`)\r\n            dispatch(setDeletedSlug(slug))\r\n\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const likeArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.post(`api/articles/${slug}/favorite`)\r\n            console.log(result)\r\n\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n}\r\n\r\nexport const unfavoriteArticle = (slug) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await instance.delete(`api/articles/${slug}/favorite`)\r\n            console.log(result)\r\n\r\n        } catch (error) {\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n}\r\n\r\nexport const createArticleThunk = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n           const result = await createArticle(data)\r\n        } catch (error) {\r\n            console.log(error.response)\r\n            dispatch(setErrorAC(error.response.data.errors))\r\n        }\r\n    }\r\n}\r\n\r\nexport default articleReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport mainPageReducer from './mainPageReducer';\r\nimport articleReducer from './Article'\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    userData: mainPageReducer,\r\n    articlesData: articleReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","export const getJwt = () => {\r\n    return sessionStorage.getItem('cool-jwt');\r\n  };\r\n\r\n  export const getName = () => {\r\n    return sessionStorage.getItem('cool-name');\r\n  }\r\n\r\n  export const isAuth = (value = false) => {\r\n    return getJwt() !== null\r\n  };\r\n\r\n  export const removeJwt = () => {\r\n      return sessionStorage.removeItem('cool-jwt');\r\n  }\r\n\r\n\r\n  export const getSlug = () => {\r\n    return sessionStorage.getItem('slug');\r\n  }\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport { RegistrationThunk } from '../../Redux/mainPageReducer';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Input } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as Yup from 'yup';\r\nimport cls from './registration.module.scss';\r\nimport { isAuth, getName } from '../../helpers/token';\r\n\r\nconst RegistrationPage = props => {\r\n  const { status, error, RegistrationThunk } = props;\r\n  let history = useHistory(); \r\n  if(isAuth() && getName() !== null) {\r\n    history.push(\"/forum\");\r\n}\r\n  if( status < 300 && status > 199) {\r\n      history.push(\"/forum\");\r\n  }\r\n  return (\r\n    <div className={cls.wrapper}>\r\n      <Formik\r\n        initialValues={{ email: \"\", name: \"\", password: \"\", confirm_password: \"\" }}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n          setSubmitting(false);\r\n          RegistrationThunk({\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name\r\n          })\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          confirm_password: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords dont match'),\r\n        })}\r\n      >\r\n\r\n        {props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            dirty,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            handleReset\r\n          } = props;\r\n          return (\r\n            <form onSubmit={handleSubmit} className={cls.form}>\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Email\r\n              </label>\r\n              <Input\r\n                id=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                type=\"text\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {error !== null && error.email !== undefined && (\r\n                <div className={cls.errors}><p>{`Email ${String(error.email[0])}`}</p></div>\r\n              )}\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Name\r\n              </label>\r\n              <Input\r\n                id=\"name\"\r\n                placeholder=\"Enter your name\"\r\n                type=\"text\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {error !== null && error.username !== undefined && (\r\n                <div className={cls.errors}><p>{`Name ${String(error.username[0])}`}</p></div>\r\n              )}\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Password\r\n              </label>\r\n              <Input\r\n                id=\"password\"\r\n                placeholder=\"Enter your name\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {error !== null && error.password !== undefined && (\r\n                <div className={cls.errors}><p>{`Password ${String(error.password[0])}`}</p></div>\r\n              )}\r\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                Repeat Password\r\n              </label>\r\n              <Input\r\n                id=\"confirm_password\"\r\n                placeholder=\"Enter your name\"\r\n                type=\"password\"\r\n                value={values.confirm_password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className={cls.input}\r\n              />\r\n              {errors.confirm_password && touched.confirm_password && (\r\n                <div className={cls.errors}><p>{errors.confirm_password}</p></div>\r\n              )}\r\n              <div className={cls.buttonsArea}>\r\n              <NavLink to='/forum/LoginPage'> Login page</NavLink>\r\n              <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"outline\"\r\n                onClick={handleReset}\r\n                disabled={!dirty || isSubmitting}\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n                </button>\r\n                </div>\r\n                </div>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.userData.error,\r\n  status: state.userData.status\r\n})\r\n\r\nconst RegistrationPageContainer = connect(mapStateToProps, { RegistrationThunk })(RegistrationPage)\r\n\r\nexport default RegistrationPageContainer;","import { connect } from 'react-redux';\r\nimport { thunk } from '../../Redux/mainPageReducer';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Input } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './login.module.scss';\r\nimport { isAuth, getName } from '../../helpers/token';\r\n\r\nconst LoginPage = (props) => {\r\n    const { status, error, thunk } = props;\r\n    let history = useHistory(); \r\n\r\n    if(isAuth() && getName() !== null) {\r\n        history.push(\"/forum\");\r\n    }\r\n\r\n    if (status < 300 && status > 199) {\r\n        setTimeout(() => isAuth() && history.push(\"/forum\"), 10);\r\n        return 'redirecting...'\r\n        }\r\n        const redirectToArticles = () => {\r\n            history.push(\"/forum/articles\");\r\n        }\r\n    return (\r\n        <div className={cls.wrapper}>\r\n           <button \r\n           onClick={redirectToArticles}\r\n           className={cls.articles}> <p> Atricles</p></button>\r\n            <Formik\r\n                initialValues={{ email: \"\", password: \"\" }}\r\n                onSubmit={async values => {\r\n                    await new Promise(resolve => setTimeout(resolve, 500));\r\n                    thunk({\r\n                        email: values.email,\r\n                        password: values.password\r\n                    })\r\n                }}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        dirty,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        handleReset\r\n                    } = props;\r\n                    return (\r\n                        <form onSubmit={handleSubmit} className={cls.form}>\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Email\r\n                             </label>\r\n                            <Input\r\n                                id=\"email\"\r\n                                placeholder=\"Enter your email\"\r\n                                type=\"text\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                password\r\n                                </label>\r\n                            <Input\r\n                                id=\"password\"\r\n                                placeholder=\"Enter your name\"\r\n                                type=\"password\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            {error !== null && error !== 'undefined' && (\r\n                                <div className={cls.errors}><p>{`email or password ${error[\"email or password\"]}`}</p></div>\r\n                            )}\r\n                            <div className={cls.buttonsArea}>\r\n                                <NavLink to='/forum/Registration'>Register</NavLink>\r\n                                <div>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"outline\"\r\n                                        onClick={handleReset}\r\n                                        disabled={!dirty || isSubmitting}\r\n                                    >\r\n                                        Reset\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"submit\" disabled={isSubmitting}\r\n                                        >\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    error: state.userData.error,\r\n    status: state.userData.status\r\n})\r\n\r\nconst LoginPageContainer = connect(mapStateToProps, { thunk })(LoginPage)\r\n\r\nexport default LoginPageContainer;","import { connect } from 'react-redux';\r\nimport { setStatusAC } from '../../Redux/mainPageReducer';\r\nimport React, { useState, useEffect } from 'react';\r\nimport cls from './main.module.scss';\r\nimport { removeJwt, getJwt, getName } from '../../helpers/token';\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\nimport instance from '../../API/API';\r\n\r\nconst MainPage = (props) => {\r\n  const [name, setName] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const key = getJwt()\r\n    const fetchData = async () => {\r\n      if (key !== null) {\r\n        try {\r\n          const result = await instance.get('/api/user')\r\n          setName(getName())\r\n        } catch (error) {\r\n          if (error) {\r\n            removeJwt('cool-jwt')\r\n            props.setStatusAC({data: 401});\r\n            props.history.push('/forum/LoginPage')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (name === null) {\r\n      fetchData();\r\n    }\r\n  }, [name, props ])\r\n\r\n  const deleteToken = () => {\r\n    removeJwt('cool-jwt')\r\n    props.history.push('/forum/LoginPage');\r\n    return props.setStatusAC({data: 401});\r\n  }\r\n\r\n  return (\r\n        <div className={cls.wrapper}>\r\n          <h3> {name} </h3>\r\n          <NavLink to='/forum/articles'>All Articles</NavLink>\r\n          <button\r\n            onClick={deleteToken}\r\n          > Выйти </button>\r\n        </div>\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n  {\r\n    username: state.userData.username,\r\n    token: state.userData.token,\r\n    status: state.userData.status\r\n  }\r\n)\r\n\r\nconst mainPageContainer = connect(mapStateToProps, { setStatusAC })(MainPage);\r\n\r\nexport default mainPageContainer;","import { connect } from 'react-redux';\r\nimport { thunk } from '../../Redux/mainPageReducer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport instance from '../../API/API'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './all.module.scss';\r\nimport { Pagination } from 'antd';\r\nimport { setArticlesAC, \r\n         setPageNumberAC, \r\n         setLoadingAC, \r\n         getArticle, \r\n         getSlugAC, \r\n         deleteArticle, \r\n         likeArticle, \r\n         unfavoriteArticle,\r\n         setFavoriteAC,\r\n         setUnfavoriteAC } from '../../Redux/Article'\r\nimport { getName, isAuth } from '../../helpers/token';\r\nimport {HeartOutlined, HeartFilled} from '@ant-design/icons';\r\nimport { parseISO, differenceInMinutes, getTime, differenceInHours, differenceInDays } from 'date-fns';\r\n\r\nconst ArticlesPage = (props) => {\r\n    const history = useHistory();\r\n    const username = getName();\r\n    const {articles, pageSize, pageNumber, setArticlesAC, setLoadingAC, setPageNumberAC, getSlugAC, setFavoriteAC,setUnfavoriteAC} = props \r\n    const date = Date.now()\r\n\r\n\r\n\r\n    const [pagesQuantity, seTpagesQuantity] = useState(1);\r\n    const [page, seTpage] = useState(props.pageNumber)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await instance.get(`/api/articles?offset=${pageNumber === 1 ? 0 : (pageNumber - 1) * (pageSize)}&limit=${pageSize}`)\r\n                setArticlesAC(result.data.articles, result.data.articlesCount, true, result.data.favorited)\r\n                seTpagesQuantity(Math.ceil(result.data.articlesCount / pageSize))\r\n            } catch (error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [pageNumber])\r\n\r\n    const onChange = page => {\r\n        setLoadingAC(false)\r\n        setPageNumberAC(page)\r\n        seTpage(page)\r\n    };\r\n    const getSlug = (slug) => {\r\n        history.push(\"/forum/article\");\r\n        sessionStorage.setItem('slug', slug);\r\n        getSlugAC(slug)\r\n    }\r\n    const deleteArticle = (slug) => {\r\n        props.deleteArticle(slug)\r\n    }\r\n    const likeArticle = (slug) => {\r\n            props.likeArticle(slug)\r\n            setFavoriteAC(slug)\r\n    }\r\n\r\n    const dislikeArticle = (slug) => {\r\n        props.unfavoriteArticle(slug)\r\n        setUnfavoriteAC(slug)\r\n    }\r\n    const createArtice = () => {\r\n        history.push(\"/forum/developmentPage\");\r\n    }\r\n    return (\r\n        <div className={cls.wrapper}>\r\n            <button\r\n            disabled={!isAuth()}\r\n                onClick={createArtice}> <h4>\r\n                Create Article</h4></button>\r\n            <div className={cls.pagination}>\r\n                {pagesQuantity !== 0 &&\r\n                    <Pagination\r\n                        defaultCurrent={1}\r\n                        current={page}\r\n                        onChange={onChange}\r\n                        showSizeChanger={false}\r\n                        pageSize={props.pageSize}\r\n                        total={props.articlesQuantity}\r\n                    />}\r\n            </div>\r\n            <ul className={cls.ul}>\r\n                {articles !== 'undefined' && props.isLoaded &&  articles.map((el, index) => {\r\n                        return <li key={index}\r\n                       onClick={() => getSlug(el.slug)}\r\n                   >\r\n                       <div className={cls.card}>\r\n                           <img src=\"https://cdn.jevelin.shufflehound.com/wp-content/uploads/sites/11/2016/11/14-768x720.jpg\" alt=\"mountain\" />\r\n                           <div className={cls.Card_leftside}>\r\n                           <div className={cls.authorInfo}>\r\n                           \r\n                                   <div className={cls.dateValue}>\r\n                                   <p>{`created by ${el.author.username}`}</p>\r\n                               <div className={cls.reversedDate}>\r\n                                {differenceInMinutes( date, getTime(parseISO(`${el.createdAt}`))) >= 60 \r\n                                    ?<h4>{ `${differenceInMinutes( date, getTime(parseISO(`${el.createdAt}`)))\r\n                                     - (differenceInHours( date, getTime(parseISO(`${el.createdAt}`))) * 60)} min`}</h4>\r\n                                     : differenceInMinutes( date, getTime(parseISO(`${el.createdAt}`))) < 1 \r\n                                     ? <h4>less than minute</h4>\r\n                                     : <h4>{`${differenceInMinutes( date, getTime(parseISO(`${el.createdAt}`)))} min`}</h4> \r\n                               } \r\n                               \r\n                                {differenceInHours( date, getTime(parseISO(`${el.createdAt}`))) >= 24 &&\r\n                                differenceInHours( date, getTime(parseISO(`${el.createdAt}`)))\r\n                                - (differenceInDays( date, getTime(parseISO(`${el.createdAt}`))) * 24) > 0\r\n                                ? \r\n                                <h4>{`${differenceInHours( date, getTime(parseISO(`${el.createdAt}`)))\r\n                               - (differenceInDays( date, getTime(parseISO(`${el.createdAt}`))) * 24)} hours`}</h4>\r\n                               : ''} \r\n                               { differenceInHours( date, getTime(parseISO(`${el.createdAt}`))) < 24 \r\n                               && differenceInHours( date, getTime(parseISO(`${el.createdAt}`))) > 0\r\n                               ?<h4> {`${differenceInHours( date, getTime(parseISO(`${el.createdAt}`)))} hours`} </h4>\r\n                               : '' }\r\n\r\n                                {differenceInDays( date, getTime(parseISO(`${el.createdAt}`))) > 0 ?\r\n                                  <h4>{`${ differenceInDays( date, getTime(parseISO(`${el.createdAt}`)))} days `}</h4>\r\n                                   : ''\r\n                            }\r\n                            </div>\r\n                            <h4>ago</h4>\r\n                               </div>\r\n                               <h2>{el.title}</h2>\r\n                                {el.tagList.length > 0 ? \r\n                              <h4>{`tags: ${el.tagList.join(', ')}`}</h4>\r\n                                : <h4>tags: -</h4>\r\n                            }\r\n                           </div>\r\n                           <div className={cls.cardFooter}>\r\n                           {username === el.author.username &&\r\n                               <button\r\n                                   onClick={(e) => {\r\n                                       e.stopPropagation();\r\n                                       getSlug(el.slug)\r\n                                       history.push(\"/forum/editPage\");\r\n                                   }}\r\n                               >\r\n                                   <h4> Change Article</h4>\r\n                               </button>}\r\n                           {username === el.author.username &&\r\n                               <button\r\n                                   onClick={(e) => {\r\n                                       e.stopPropagation();\r\n                                       deleteArticle(el.slug)\r\n                                   }}\r\n                               >\r\n                                   <h4> Delete Article</h4>\r\n                               </button>}\r\n\r\n                                    {el.favorited ? <button\r\n                                    disabled={!isAuth()}\r\n                                          onClick={(e) => {\r\n                                              e.stopPropagation();\r\n                                               dislikeArticle(el.slug)}}\r\n                                      ><h5><HeartFilled /></h5><h5>{el.favoritesCount}</h5></button>\r\n                                       : <button\r\n                                       disabled={!isAuth()}\r\n                                          onClick={(e) => {\r\n                                              \r\n                                              e.stopPropagation();\r\n                                              likeArticle(el.slug)}}\r\n                                      ><h5><HeartOutlined /></h5><h5>{el.favoritesCount}</h5></button>}\r\n                                      \r\n                           </div>\r\n                           </div>\r\n                       </div>\r\n                   </li>\r\n\r\n                })}\r\n            </ul>\r\n            <div>\r\n                <p>{!props.isLoaded && '...loading'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    articles: state.articlesData.articles,\r\n    pageSize: state.articlesData.pageSize,\r\n    pageNumber: state.articlesData.pageNumber,\r\n    isLoaded: state.articlesData.isLoaded,\r\n    articlesQuantity: state.articlesData.articlesQuantity,\r\n    favoriteArticles: state.articlesData.favoriteArticles\r\n})\r\n\r\nconst AllArticlesContainer = connect(mapStateToProps,\r\n    {\r\n        setArticlesAC,\r\n        setPageNumberAC,\r\n        setLoadingAC,\r\n        getArticle,\r\n        getSlugAC,\r\n        deleteArticle,\r\n        unfavoriteArticle,\r\n        likeArticle,\r\n        setFavoriteAC,\r\n        setUnfavoriteAC\r\n    })(ArticlesPage)\r\n\r\nexport default AllArticlesContainer;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuth } from \"./token\";\r\n\r\nexport const ProtectedRoute = ({\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (isAuth()) {\r\n            return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/forum/LoginPage\",\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { thunk } from '../../Redux/mainPageReducer';\r\nimport { HeartOutlined, HeartFilled } from '@ant-design/icons';\r\nimport React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './current.module.scss';\r\nimport instance from '../../API/API';\r\nimport {\r\n    unfavoriteArticle,\r\n    likeArticle,\r\n    setFavoriteCurrentAC,\r\n    setUnfavoriteCurrentAC,\r\n    getCurrentArticleAC,\r\n} from '../../Redux/Article';\r\nimport { getSlug, isAuth } from '../../helpers/token';\r\n\r\nimport { parseISO, differenceInMinutes, getTime, differenceInHours, differenceInDays } from 'date-fns';\r\n\r\n\r\n\r\nconst SingleArticlePage = (props) => {\r\n    const { setFavoriteCurrentAC, setUnfavoriteCurrentAC, likeArticle, unfavoriteArticle, article } = props;\r\n    const { body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt } = article;\r\n    const date = Date.now()\r\n    console.log(article)\r\n    const sessionSlug = sessionStorage.getItem('slug')\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await instance.get(`/api/articles/${sessionSlug}`)\r\n                const { body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt } = result.data.article\r\n                props.getCurrentArticleAC(body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt)\r\n            } catch (error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n        if (sessionSlug !== null) {\r\n            fetchData();\r\n        }\r\n    }, [sessionSlug, body])\r\n\r\n    const addLikeToArticle = (slug) => {\r\n        console.log(slug)\r\n        likeArticle(slug)\r\n        setFavoriteCurrentAC(slug)\r\n    }\r\n\r\n    const dislikeArticle = (slug) => {\r\n        console.log(slug)\r\n        unfavoriteArticle(slug)\r\n        setUnfavoriteCurrentAC(slug)\r\n    }\r\n\r\n\r\n    return (article.hasOwnProperty('body') &&\r\n        <div className={cls.wrapper}>\r\n            <div className={cls.body}>\r\n                <img src='https://cdn.jevelin.shufflehound.com/wp-content/uploads/sites/28/2019/09/101_0001_alexandru-acea-bbokzTQjB9o-unsplash-1024x777.jpg' alt=\"pic\" />\r\n                \r\n                \r\n                \r\n                \r\n                <div className={cls.dateValue}>\r\n                <p>{`created by ${author.username}`}</p>\r\n                    <div className={cls.reversedDate}>\r\n                        {differenceInMinutes(date, getTime(parseISO(`${createdAt}`))) >= 60\r\n                            ? <h4>{`${differenceInMinutes(date, getTime(parseISO(`${createdAt}`)))\r\n                                - (differenceInHours(date, getTime(parseISO(`${createdAt}`))) * 60)} min`}</h4>\r\n                            : differenceInMinutes(date, getTime(parseISO(`${createdAt}`))) < 1\r\n                                ? <h4>less than minute</h4>\r\n                                : <h4>{`${differenceInMinutes(date, getTime(parseISO(`${createdAt}`)))} min`}</h4>\r\n                        }\r\n\r\n                        {differenceInHours(date, getTime(parseISO(`${createdAt}`))) >= 24 &&\r\n                            differenceInHours(date, getTime(parseISO(`${createdAt}`)))\r\n                            - (differenceInDays(date, getTime(parseISO(`${createdAt}`))) * 24) > 0\r\n                            ?\r\n                            <h4>{`${differenceInHours(date, getTime(parseISO(`${createdAt}`)))\r\n                                - (differenceInDays(date, getTime(parseISO(`${createdAt}`))) * 24)} hours`}</h4>\r\n                            : ''}\r\n                        {differenceInHours(date, getTime(parseISO(`${createdAt}`))) < 24\r\n                            && differenceInHours(date, getTime(parseISO(`${createdAt}`))) > 0\r\n                            ? <h4> {`${differenceInHours(date, getTime(parseISO(`${createdAt}`)))} hours`} </h4>\r\n                            : ''}\r\n\r\n                        {differenceInDays(date, getTime(parseISO(`${createdAt}`))) > 0 ?\r\n                            <h4>{`${differenceInDays(date, getTime(parseISO(`${createdAt}`)))} days `}</h4>\r\n                            : ''\r\n                        }\r\n                    </div>\r\n                    <h4>ago</h4>\r\n                </div>\r\n                <p>{title}</p>\r\n                <p>{description}</p>\r\n                <p>{body}</p>\r\n                <ul>\r\n                    <p>tags: </p>\r\n                    {tagList.map((el, index) => {\r\n                        return <li key={index}><p>{el}</p></li>\r\n                    })}\r\n                </ul>\r\n                {article.favorited ? <button\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        dislikeArticle(getSlug())\r\n                    }}\r\n                ><h5><HeartFilled /></h5><h5>{article.favoritesCount}</h5></button>\r\n                    : <button\r\n                    disabled={!isAuth()}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            addLikeToArticle(getSlug())\r\n                        }}\r\n                    ><h5><HeartOutlined /></h5><h5>{article.favoritesCount}</h5></button>}\r\n                <NavLink to='/forum/articles'>All Articles</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    article: state.articlesData.currentArticle,\r\n})\r\n\r\nconst SingleArticleContainer = connect(mapStateToProps, {\r\n    unfavoriteArticle,\r\n    likeArticle,\r\n    setFavoriteCurrentAC,\r\n    setUnfavoriteCurrentAC,\r\n    getCurrentArticleAC\r\n})(SingleArticlePage)\r\n\r\nexport default SingleArticleContainer;","import { connect } from 'react-redux';\r\nimport { createArticleThunk } from '../../Redux/Article';\r\nimport React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Input } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './add.module.scss';\r\nimport {CloseCircleOutlined} from '@ant-design/icons';\r\n\r\nconst DevelopmentPage = (props) => {\r\n    const { error, createArticleThunk } = props;\r\n    const [tagsArray, setTagsArray] = useState([]);\r\n    let tagInput = '';\r\n\r\n    const removeTag = (i) => {\r\n        const arr = tagsArray.splice(i, 1)\r\n        setTagsArray(tagsArray.filter(el => el !== arr[0]));\r\n    }\r\n\r\n    const inputKeyDown = (e) => {\r\n        const val = e.target.value;\r\n        if (e.key === 'Shift' && val) {\r\n            if (tagsArray.find(tag => tag.toLowerCase() === val.toLowerCase())) {\r\n                return;\r\n            }\r\n            setTagsArray(tagsArray.concat(val));\r\n            tagInput.value = null;\r\n        } else if (e.key === 'Backspace' && !val) {\r\n            removeTag(tagsArray.length - 1);\r\n        }\r\n    }\r\n    return (\r\n        <div className={cls.wrapper}>\r\n            <NavLink to='/forum/articles'>All Articles</NavLink>\r\n            <Formik\r\n                initialValues={{ title: \"\", description: \"\", body: \"\"}}\r\n                onSubmit={async values => {\r\n                    await new Promise(resolve => setTimeout(resolve, 500));\r\n                    createArticleThunk({\r\n                        article: {\r\n                            title: values.title,\r\n                            description: values.description,\r\n                            body: values.body,\r\n                            tagList: tagsArray\r\n                        }\r\n                    })\r\n                }}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        dirty,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        handleReset\r\n                    } = props;\r\n                    return (\r\n                        <form onSubmit={handleSubmit} className={cls.form}>\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Title\r\n                             </label>\r\n                            <Input\r\n                                id=\"title\"\r\n                                placeholder=\"Enter your email\"\r\n                                type=\"text\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            {error !== '' && error.hasOwnProperty('title') && (\r\n                                <div className={cls.errors}><p>{`title ${error.title[0]}`}</p></div>\r\n                            )}\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Description\r\n                                </label>\r\n                            <Input\r\n                                id=\"description\"\r\n                                placeholder=\"Enter your name\"\r\n                                type=\"text\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            {error !== '' && error.hasOwnProperty('description') && (\r\n                                <div className={cls.errors}><p>{`description ${String(error.description[0])}`}</p></div>\r\n                            )}\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Body\r\n                                </label>\r\n                            <Input.TextArea\r\n                                id=\"body\"\r\n                                placeholder=\"Enter your name\"\r\n                                type=\"text\"\r\n                                value={values.body}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            {error !== '' && error.hasOwnProperty('body') && (\r\n                                <div className={cls.errors}><p>{`body ${error.body[0]}`}</p></div>\r\n                            )}\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Tags\r\n                                </label>\r\n                            <div className={cls.tagsArea}>\r\n                                <ul className={cls.tagsUl}>\r\n                                    {tagsArray.map((tag, i) => (\r\n                                        <li key={tag}>\r\n                                            <h4>\r\n                                            {tag}\r\n                                            <button type=\"button\" onClick={() => { removeTag(i) }}><CloseCircleOutlined /></button>\r\n                                            </h4>\r\n                                        </li>\r\n                                    ))}\r\n                                    <li className={cls.tagsInput}>\r\n                                        <input type=\"text\" placeholder=\"press shift for adding tag\" onKeyDown={inputKeyDown} ref={c => { tagInput = c; }} />\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className={cls.buttonsArea}>\r\n                                <div>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"outline\"\r\n                                        onClick={handleReset}\r\n                                        disabled={!dirty || isSubmitting}\r\n                                    >\r\n                                        Reset\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"submit\" disabled={isSubmitting}\r\n                                    >\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    error: state.articlesData.error,\r\n    status: state.userData.status\r\n})\r\n\r\nconst DevelopmentPageContainer = connect(mapStateToProps, { createArticleThunk })(DevelopmentPage)\r\n\r\nexport default DevelopmentPageContainer;","import { connect } from 'react-redux';\r\nimport { getCurrentArticleAC } from '../../Redux/Article';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Input } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cls from './edit.module.scss';\r\nimport instance, { updateArticle } from '../../API/API';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nconst EditPage = (props) => {\r\n    const { error, thunk, currentArticle, slug } = props;\r\n    const { body, description, title, tagList } = currentArticle;\r\n    const sessionSlug = sessionStorage.getItem('slug');\r\n    const [tagsArray, setTagsArray] = useState([]);\r\n\r\n    let tagInput = '';\r\n\r\n    const removeTag = (i) => {\r\n        const arr = tagsArray.splice(i, 1)\r\n        setTagsArray(tagsArray.filter(el => el !== arr[0]));\r\n    }\r\n\r\n    const inputKeyDown = (e) => {\r\n        const val = e.target.value;\r\n        if (e.key === 'Shift' && val) {\r\n            if (tagsArray.find(tag => tag.toLowerCase() === val.toLowerCase())) {\r\n                return;\r\n            }\r\n            setTagsArray(tagsArray.concat(val));\r\n            tagInput.value = null;\r\n        } else if (e.key === 'Backspace' && !val) {\r\n            removeTag(tagsArray.length - 1);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await instance.get(`/api/articles/${sessionSlug}`)\r\n                setTagsArray(result.data.article.tagList)\r\n                const { body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt } = result.data.article\r\n                props.getCurrentArticleAC(body, author, createdAt, description, favoritesCount, favorited, title, tagList, updatedAt)\r\n            } catch (error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n        if (sessionSlug !== null) {\r\n            fetchData();\r\n        }\r\n    }, [slug, body])\r\n\r\n    let history = useHistory();\r\n\r\n    return (currentArticle.hasOwnProperty('body') &&\r\n        <div className={cls.wrapper}>\r\n            <Formik\r\n                initialValues={{\r\n                    title: title,\r\n                    description: description,\r\n                    body: body\r\n                }}\r\n                onSubmit={async values => {\r\n                    await new Promise(resolve => setTimeout(resolve, 500));\r\n                    updateArticle({\r\n                        article: {\r\n                            title: values.title,\r\n                            description: values.description,\r\n                            body: values.body,\r\n                            tagList: tagsArray\r\n                        }\r\n                    })\r\n                }}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        dirty,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        handleReset\r\n                    } = props;\r\n                    return (\r\n                        <form onSubmit={handleSubmit} className={cls.form}>\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Title\r\n                         </label>\r\n                            <Input\r\n                                id=\"title\"\r\n                                placeholder=\"title\"\r\n                                type=\"text\"\r\n                                value={values.title}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            {error !== '' && error.hasOwnProperty('title') && (\r\n                                <div className={cls.errors}><p>{`title ${error.title[0]}`}</p></div>\r\n                            )}\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Description\r\n                            </label>\r\n                            <Input\r\n                                id=\"description\"\r\n                                placeholder=\"description\"\r\n                                type=\"text\"\r\n                                value={values.description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            {error !== '' && error.hasOwnProperty('description') && (\r\n                                <div className={cls.errors}><p>{`description ${String(error.description[0])}`}</p></div>\r\n                            )}\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Body\r\n                            </label>\r\n                            <Input.TextArea\r\n                                id=\"body\"\r\n                                placeholder=\"body\"\r\n                                type=\"text\"\r\n                                value={values.body}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={cls.input}\r\n                            />\r\n                            {error !== '' && error.hasOwnProperty('body') && (\r\n                                <div className={cls.errors}><p>{`body ${error.body[0]}`}</p></div>\r\n                            )}\r\n                            <label htmlFor=\"email\" style={{ display: \"block\" }}>\r\n                                Tags\r\n                            </label>\r\n                            <div className={cls.tagsArea}>\r\n                                <ul className={cls.tagsUl}>\r\n                                    {tagsArray.map((tag, i) => (\r\n                                        <li key={tag}>\r\n                                            <h4>\r\n                                                {tag}\r\n                                                <button type=\"button\" onClick={() => { removeTag(i) }}><CloseCircleOutlined /></button>\r\n                                            </h4>\r\n                                        </li>\r\n                                    ))}\r\n                                    <li className={cls.tagsInput}>\r\n                                        <input type=\"text\" placeholder=\"press shift for adding tag\" onKeyDown={inputKeyDown} ref={c => { tagInput = c; }} />\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className={cls.buttonsArea}>\r\n                                <NavLink to='/forum/articles'>All Articles</NavLink>\r\n                                <div>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"outline\"\r\n                                        onClick={handleReset}\r\n                                        disabled={!dirty || isSubmitting}\r\n                                    >\r\n                                        Reset\r\n                                </button>\r\n                                    <button\r\n                                        type=\"submit\" disabled={isSubmitting}\r\n                                    >\r\n                                        Submit\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    error: state.articlesData.error,\r\n    currentArticle: state.articlesData.currentArticle,\r\n    slug: state.articlesData.slug\r\n})\r\n\r\nconst EditPageContainer = connect(mapStateToProps, { getCurrentArticleAC })(EditPage)\r\n\r\nexport default EditPageContainer;","import React from 'react';\r\nimport './App.module.scss';\r\nimport RegistrationPageContainer from './Components/RegistrationPage/RegistrationPageContainer';\r\nimport LoginPageContainer from './Components/LoginPage/loginPageContainer';\r\nimport mainPageContainer from './Components/MainPage/MainPageContainer'\r\nimport AllArticlesContainer from './Components/ArticlesPAge/AllArticles'\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport { ProtectedRoute } from './helpers/protectedRoute';\r\nimport SingleArticleContainer from './Components/CurrentArticlePage/CurrentArticle';\r\nimport DevelopmentPageContainer from './Components/AddNewArticlePage/AddArticle';\r\nimport EditPageContainer from './Components/EditingPage/EditingPage';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/forum/LoginPage' component={LoginPageContainer} />\r\n      <Route path='/forum/articles' component={AllArticlesContainer} />\r\n      <Route path='/forum/Registration' component={RegistrationPageContainer}/>\r\n      <Route path='/forum/developmentPage' component={DevelopmentPageContainer}/>\r\n      <Route path='/forum/article' component={SingleArticleContainer}/>\r\n      <Route path='/forum/editPage' component={EditPageContainer}/>\r\n      <ProtectedRoute exact path='/forum/' component={mainPageContainer} />\r\n    </Switch>\r\n  ) \r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './Redux/redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"add_wrapper__18aeq\",\"tagsArea\":\"add_tagsArea__VK1a6\",\"tagsUl\":\"add_tagsUl__2iwYx\",\"tagsInput\":\"add_tagsInput__uttKl\",\"form\":\"add_form__2ZEfx\",\"input\":\"add_input__s4GrR\",\"buttonsArea\":\"add_buttonsArea__1GJgx\",\"errors\":\"add_errors__2krLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"edit_wrapper__3ImOb\",\"tagsArea\":\"edit_tagsArea__3dEnt\",\"tagsUl\":\"edit_tagsUl__3WbYn\",\"tagsInput\":\"edit_tagsInput__1L0aH\",\"form\":\"edit_form__qHkBW\",\"input\":\"edit_input__1WXhm\",\"buttonsArea\":\"edit_buttonsArea__3l9pf\",\"errors\":\"edit_errors__KsEZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"registration_wrapper__3w-sm\",\"form\":\"registration_form__1d1UH\",\"input\":\"registration_input__3F6qd\",\"buttonsArea\":\"registration_buttonsArea__18T8o\",\"errors\":\"registration_errors__1_bjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"all_wrapper__1g5rn\",\"ul\":\"all_ul__14Yu3\",\"cardFooter\":\"all_cardFooter__3SmL2\",\"authorInfo\":\"all_authorInfo__3YXru\",\"dateValue\":\"all_dateValue__3yyQ_\",\"reversedDate\":\"all_reversedDate__3Rkt_\",\"card\":\"all_card__20v59\",\"Card_leftside\":\"all_Card_leftside__zZwjE\",\"textBody\":\"all_textBody__XPIrQ\",\"pagination\":\"all_pagination__3KTEm\",\"form\":\"all_form__BeSfJ\",\"input\":\"all_input__21E_i\",\"buttonsArea\":\"all_buttonsArea__2Mrhu\",\"errors\":\"all_errors__35JYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__1DHUi\",\"articles\":\"login_articles__kOmqn\",\"form\":\"login_form__2l9yv\",\"input\":\"login_input__2o3z6\",\"buttonsArea\":\"login_buttonsArea__1JAdq\",\"errors\":\"login_errors__H-sF-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"current_wrapper__j5zsz\",\"dateValue\":\"current_dateValue__qcVvq\",\"reversedDate\":\"current_reversedDate__1VAZB\",\"body\":\"current_body__3dhTr\",\"errors\":\"current_errors__39V4m\"};"],"sourceRoot":""}